// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/gomatcha/matcha/proto/view/ios/stackview.proto

package ios

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import proto1 "github.com/gomatcha/matcha/proto"
import text "github.com/gomatcha/matcha/proto/text"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StackChildView struct {
	ScreenId             int64    `protobuf:"varint,3,opt,name=screenId,proto3" json:"screenId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StackChildView) Reset()         { *m = StackChildView{} }
func (m *StackChildView) String() string { return proto.CompactTextString(m) }
func (*StackChildView) ProtoMessage()    {}
func (*StackChildView) Descriptor() ([]byte, []int) {
	return fileDescriptor_72fd5c6f97e3db79, []int{0}
}
func (m *StackChildView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackChildView.Unmarshal(m, b)
}
func (m *StackChildView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackChildView.Marshal(b, m, deterministic)
}
func (m *StackChildView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackChildView.Merge(m, src)
}
func (m *StackChildView) XXX_Size() int {
	return xxx_messageInfo_StackChildView.Size(m)
}
func (m *StackChildView) XXX_DiscardUnknown() {
	xxx_messageInfo_StackChildView.DiscardUnknown(m)
}

var xxx_messageInfo_StackChildView proto.InternalMessageInfo

func (m *StackChildView) GetScreenId() int64 {
	if m != nil {
		return m.ScreenId
	}
	return 0
}

type StackView struct {
	Children             []*StackChildView `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
	TitleTextStyle       *text.TextStyle   `protobuf:"bytes,2,opt,name=titleTextStyle,proto3" json:"titleTextStyle,omitempty"`
	BackTextStyle        *text.TextStyle   `protobuf:"bytes,3,opt,name=backTextStyle,proto3" json:"backTextStyle,omitempty"`
	BarColor             *proto1.Color     `protobuf:"bytes,4,opt,name=barColor,proto3" json:"barColor,omitempty"`
	ItemColor            *proto1.Color     `protobuf:"bytes,5,opt,name=itemColor,proto3" json:"itemColor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StackView) Reset()         { *m = StackView{} }
func (m *StackView) String() string { return proto.CompactTextString(m) }
func (*StackView) ProtoMessage()    {}
func (*StackView) Descriptor() ([]byte, []int) {
	return fileDescriptor_72fd5c6f97e3db79, []int{1}
}
func (m *StackView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackView.Unmarshal(m, b)
}
func (m *StackView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackView.Marshal(b, m, deterministic)
}
func (m *StackView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackView.Merge(m, src)
}
func (m *StackView) XXX_Size() int {
	return xxx_messageInfo_StackView.Size(m)
}
func (m *StackView) XXX_DiscardUnknown() {
	xxx_messageInfo_StackView.DiscardUnknown(m)
}

var xxx_messageInfo_StackView proto.InternalMessageInfo

func (m *StackView) GetChildren() []*StackChildView {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *StackView) GetTitleTextStyle() *text.TextStyle {
	if m != nil {
		return m.TitleTextStyle
	}
	return nil
}

func (m *StackView) GetBackTextStyle() *text.TextStyle {
	if m != nil {
		return m.BackTextStyle
	}
	return nil
}

func (m *StackView) GetBarColor() *proto1.Color {
	if m != nil {
		return m.BarColor
	}
	return nil
}

func (m *StackView) GetItemColor() *proto1.Color {
	if m != nil {
		return m.ItemColor
	}
	return nil
}

type StackBar struct {
	Title                 string          `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	BackButtonHidden      bool            `protobuf:"varint,7,opt,name=backButtonHidden,proto3" json:"backButtonHidden,omitempty"`
	CustomBackButtonTitle bool            `protobuf:"varint,2,opt,name=customBackButtonTitle,proto3" json:"customBackButtonTitle,omitempty"`
	BackButtonTitle       string          `protobuf:"bytes,3,opt,name=backButtonTitle,proto3" json:"backButtonTitle,omitempty"`
	HasTitleView          bool            `protobuf:"varint,4,opt,name=hasTitleView,proto3" json:"hasTitleView,omitempty"`
	RightViewCount        int64           `protobuf:"varint,5,opt,name=rightViewCount,proto3" json:"rightViewCount,omitempty"`
	LeftViewCount         int64           `protobuf:"varint,6,opt,name=leftViewCount,proto3" json:"leftViewCount,omitempty"`
	RightItems            []*StackBarItem `protobuf:"bytes,8,rep,name=rightItems,proto3" json:"rightItems,omitempty"`
	LeftItems             []*StackBarItem `protobuf:"bytes,9,rep,name=leftItems,proto3" json:"leftItems,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}        `json:"-"`
	XXX_unrecognized      []byte          `json:"-"`
	XXX_sizecache         int32           `json:"-"`
}

func (m *StackBar) Reset()         { *m = StackBar{} }
func (m *StackBar) String() string { return proto.CompactTextString(m) }
func (*StackBar) ProtoMessage()    {}
func (*StackBar) Descriptor() ([]byte, []int) {
	return fileDescriptor_72fd5c6f97e3db79, []int{2}
}
func (m *StackBar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackBar.Unmarshal(m, b)
}
func (m *StackBar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackBar.Marshal(b, m, deterministic)
}
func (m *StackBar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackBar.Merge(m, src)
}
func (m *StackBar) XXX_Size() int {
	return xxx_messageInfo_StackBar.Size(m)
}
func (m *StackBar) XXX_DiscardUnknown() {
	xxx_messageInfo_StackBar.DiscardUnknown(m)
}

var xxx_messageInfo_StackBar proto.InternalMessageInfo

func (m *StackBar) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *StackBar) GetBackButtonHidden() bool {
	if m != nil {
		return m.BackButtonHidden
	}
	return false
}

func (m *StackBar) GetCustomBackButtonTitle() bool {
	if m != nil {
		return m.CustomBackButtonTitle
	}
	return false
}

func (m *StackBar) GetBackButtonTitle() string {
	if m != nil {
		return m.BackButtonTitle
	}
	return ""
}

func (m *StackBar) GetHasTitleView() bool {
	if m != nil {
		return m.HasTitleView
	}
	return false
}

func (m *StackBar) GetRightViewCount() int64 {
	if m != nil {
		return m.RightViewCount
	}
	return 0
}

func (m *StackBar) GetLeftViewCount() int64 {
	if m != nil {
		return m.LeftViewCount
	}
	return 0
}

func (m *StackBar) GetRightItems() []*StackBarItem {
	if m != nil {
		return m.RightItems
	}
	return nil
}

func (m *StackBar) GetLeftItems() []*StackBarItem {
	if m != nil {
		return m.LeftItems
	}
	return nil
}

type StackEvent struct {
	Id                   []int64  `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StackEvent) Reset()         { *m = StackEvent{} }
func (m *StackEvent) String() string { return proto.CompactTextString(m) }
func (*StackEvent) ProtoMessage()    {}
func (*StackEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_72fd5c6f97e3db79, []int{3}
}
func (m *StackEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackEvent.Unmarshal(m, b)
}
func (m *StackEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackEvent.Marshal(b, m, deterministic)
}
func (m *StackEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackEvent.Merge(m, src)
}
func (m *StackEvent) XXX_Size() int {
	return xxx_messageInfo_StackEvent.Size(m)
}
func (m *StackEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_StackEvent.DiscardUnknown(m)
}

var xxx_messageInfo_StackEvent proto.InternalMessageInfo

func (m *StackEvent) GetId() []int64 {
	if m != nil {
		return m.Id
	}
	return nil
}

type StackBarItem struct {
	Enabled              bool                    `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	TintColor            *proto1.Color           `protobuf:"bytes,4,opt,name=tintColor,proto3" json:"tintColor,omitempty"`
	Title                string                  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	TitleStyle           *text.TextStyle         `protobuf:"bytes,5,opt,name=titleStyle,proto3" json:"titleStyle,omitempty"`
	Image                *proto1.ImageOrResource `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	TintsImage           bool                    `protobuf:"varint,6,opt,name=tintsImage,proto3" json:"tintsImage,omitempty"`
	OnPress              string                  `protobuf:"bytes,7,opt,name=onPress,proto3" json:"onPress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *StackBarItem) Reset()         { *m = StackBarItem{} }
func (m *StackBarItem) String() string { return proto.CompactTextString(m) }
func (*StackBarItem) ProtoMessage()    {}
func (*StackBarItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_72fd5c6f97e3db79, []int{4}
}
func (m *StackBarItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackBarItem.Unmarshal(m, b)
}
func (m *StackBarItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackBarItem.Marshal(b, m, deterministic)
}
func (m *StackBarItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackBarItem.Merge(m, src)
}
func (m *StackBarItem) XXX_Size() int {
	return xxx_messageInfo_StackBarItem.Size(m)
}
func (m *StackBarItem) XXX_DiscardUnknown() {
	xxx_messageInfo_StackBarItem.DiscardUnknown(m)
}

var xxx_messageInfo_StackBarItem proto.InternalMessageInfo

func (m *StackBarItem) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *StackBarItem) GetTintColor() *proto1.Color {
	if m != nil {
		return m.TintColor
	}
	return nil
}

func (m *StackBarItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *StackBarItem) GetTitleStyle() *text.TextStyle {
	if m != nil {
		return m.TitleStyle
	}
	return nil
}

func (m *StackBarItem) GetImage() *proto1.ImageOrResource {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *StackBarItem) GetTintsImage() bool {
	if m != nil {
		return m.TintsImage
	}
	return false
}

func (m *StackBarItem) GetOnPress() string {
	if m != nil {
		return m.OnPress
	}
	return ""
}

func init() {
	proto.RegisterType((*StackChildView)(nil), "matcha.view.ios.StackChildView")
	proto.RegisterType((*StackView)(nil), "matcha.view.ios.StackView")
	proto.RegisterType((*StackBar)(nil), "matcha.view.ios.StackBar")
	proto.RegisterType((*StackEvent)(nil), "matcha.view.ios.StackEvent")
	proto.RegisterType((*StackBarItem)(nil), "matcha.view.ios.StackBarItem")
}

func init() {
	proto.RegisterFile("github.com/gomatcha/matcha/proto/view/ios/stackview.proto", fileDescriptor_72fd5c6f97e3db79)
}

var fileDescriptor_72fd5c6f97e3db79 = []byte{
	// 574 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x5b, 0x6f, 0xd3, 0x30,
	0x14, 0x56, 0x12, 0xba, 0x25, 0xa7, 0x5b, 0x87, 0x2c, 0x2e, 0x51, 0xc5, 0xa5, 0x8a, 0x10, 0xca,
	0x60, 0xa4, 0x68, 0x20, 0x24, 0x34, 0xe0, 0x21, 0x15, 0x12, 0x15, 0x42, 0xab, 0xdc, 0x89, 0x07,
	0xde, 0x72, 0x31, 0xad, 0xb5, 0x24, 0x46, 0xb1, 0xbb, 0x8d, 0xff, 0xc0, 0x2f, 0xe0, 0x81, 0x07,
	0x7e, 0x29, 0xf2, 0x49, 0x93, 0x5e, 0x28, 0x1d, 0x2f, 0x6d, 0xce, 0x77, 0x39, 0x39, 0xb1, 0x3f,
	0x1b, 0x5e, 0x4f, 0xb8, 0x9a, 0xce, 0xe2, 0x20, 0x11, 0x79, 0x7f, 0x22, 0xf2, 0x48, 0x25, 0xd3,
	0xa8, 0x3f, 0xff, 0xfb, 0x56, 0x0a, 0x25, 0xfa, 0x17, 0x9c, 0x5d, 0xf6, 0xb9, 0x90, 0x7d, 0xa9,
	0xa2, 0xe4, 0x5c, 0x57, 0x01, 0x12, 0xe4, 0xa0, 0x92, 0x05, 0x08, 0x71, 0x21, 0xbb, 0x47, 0xd7,
	0xf6, 0xe2, 0x79, 0x34, 0x61, 0x95, 0xbd, 0xfb, 0xfc, 0x5a, 0xb5, 0x62, 0x57, 0x0a, 0x7f, 0x2a,
	0x87, 0x77, 0x04, 0x9d, 0xb1, 0x9e, 0x61, 0x30, 0xe5, 0x59, 0xfa, 0x99, 0xb3, 0x4b, 0xd2, 0x05,
	0x5b, 0x26, 0x25, 0x63, 0xc5, 0x30, 0x75, 0xad, 0x9e, 0xe1, 0x5b, 0xb4, 0xa9, 0xbd, 0x5f, 0x26,
	0x38, 0x28, 0x47, 0xe5, 0x09, 0xd8, 0x89, 0xb6, 0x95, 0xac, 0x70, 0x8d, 0x9e, 0xe5, 0xb7, 0x8f,
	0x1f, 0x06, 0x6b, 0xf3, 0x07, 0xab, 0xcd, 0x69, 0x63, 0x20, 0xef, 0xa0, 0xa3, 0xb8, 0xca, 0xd8,
	0x19, 0xbb, 0x52, 0x63, 0xf5, 0x3d, 0x63, 0xae, 0xd9, 0x33, 0xfc, 0xf6, 0xf1, 0x9d, 0xba, 0x05,
	0x0e, 0xd9, 0xb0, 0x74, 0x4d, 0x4d, 0xde, 0xc0, 0x7e, 0x1c, 0x25, 0xe7, 0x0b, 0xbb, 0xb5, 0xd5,
	0xbe, 0x2a, 0x26, 0x87, 0x60, 0xc7, 0x51, 0x39, 0x10, 0x99, 0x28, 0xdd, 0x1b, 0x68, 0xdc, 0xaf,
	0x8d, 0x08, 0xd2, 0x86, 0x26, 0x4f, 0xc1, 0xe1, 0x8a, 0xe5, 0x95, 0xb6, 0xb5, 0x49, 0xbb, 0xe0,
	0xbd, 0x9f, 0x16, 0xd8, 0xf8, 0xc9, 0x61, 0x54, 0x92, 0x5b, 0xd0, 0xc2, 0xa1, 0x5d, 0xa3, 0x67,
	0xf8, 0x0e, 0xad, 0x0a, 0xf2, 0x04, 0x6e, 0xea, 0x59, 0xc2, 0x99, 0x52, 0xa2, 0xf8, 0xc0, 0xd3,
	0x94, 0x15, 0xee, 0x6e, 0xcf, 0xf0, 0x6d, 0xfa, 0x17, 0x4e, 0x5e, 0xc2, 0xed, 0x64, 0x26, 0x95,
	0xc8, 0xc3, 0x86, 0x39, 0xc3, 0x8e, 0x26, 0x1a, 0x36, 0x93, 0xc4, 0x87, 0x83, 0x78, 0x4d, 0x6f,
	0xe1, 0x04, 0xeb, 0x30, 0xf1, 0x60, 0x6f, 0x1a, 0x49, 0x7c, 0xd6, 0xdb, 0x83, 0x4b, 0x61, 0xd3,
	0x15, 0x8c, 0x3c, 0x86, 0x4e, 0xc9, 0x27, 0x53, 0xa5, 0x8b, 0x81, 0x98, 0x15, 0x0a, 0x17, 0xc1,
	0xa2, 0x6b, 0x28, 0x79, 0x04, 0xfb, 0x19, 0xfb, 0xba, 0x24, 0xdb, 0x41, 0xd9, 0x2a, 0x48, 0xde,
	0x02, 0xa0, 0x6f, 0xa8, 0x58, 0x2e, 0x5d, 0x1b, 0x53, 0x73, 0x7f, 0x73, 0x6a, 0xc2, 0xa8, 0xd4,
	0x2a, 0xba, 0x64, 0x20, 0x27, 0xe0, 0xe8, 0x7e, 0x95, 0xdb, 0xf9, 0x1f, 0xf7, 0x42, 0xef, 0xdd,
	0x03, 0x40, 0xea, 0xfd, 0x05, 0x2b, 0x14, 0xe9, 0x80, 0xc9, 0x53, 0xcc, 0xad, 0x45, 0x4d, 0x9e,
	0x7a, 0x3f, 0x4c, 0xd8, 0x5b, 0x76, 0x12, 0x17, 0x76, 0x59, 0x11, 0xc5, 0x19, 0xab, 0xce, 0x81,
	0x4d, 0xeb, 0x52, 0x47, 0x42, 0xf1, 0x42, 0x6d, 0x89, 0xcf, 0x82, 0xff, 0x47, 0x0a, 0x5e, 0x01,
	0xe0, 0x43, 0x95, 0xdd, 0xd6, 0xd6, 0xec, 0x2e, 0x29, 0xc9, 0x33, 0x68, 0xe1, 0x81, 0x9f, 0x9f,
	0x96, 0xbb, 0xb5, 0x65, 0xa8, 0xc1, 0xd3, 0x92, 0x32, 0x29, 0x66, 0x65, 0xc2, 0x68, 0xa5, 0x22,
	0x0f, 0xf4, 0x6b, 0x0a, 0x25, 0x91, 0xc6, 0x1d, 0xb1, 0xe9, 0x12, 0xa2, 0xbf, 0x51, 0x14, 0xa3,
	0x92, 0x49, 0x89, 0x19, 0x74, 0x68, 0x5d, 0x86, 0x1f, 0xe1, 0x30, 0x11, 0x79, 0x30, 0xbf, 0x50,
	0xea, 0xcb, 0xa4, 0x7e, 0x1d, 0x5e, 0x1e, 0xcd, 0x8a, 0x87, 0xed, 0x51, 0xdc, 0x5c, 0x0b, 0x5f,
	0x2c, 0x2e, 0xe4, 0x6f, 0xb3, 0xfd, 0x09, 0x95, 0xfc, 0x74, 0x3c, 0x0a, 0xe3, 0x1d, 0xd4, 0xbf,
	0xf8, 0x13, 0x00, 0x00, 0xff, 0xff, 0x47, 0xcb, 0xf8, 0x83, 0x1a, 0x05, 0x00, 0x00,
}
