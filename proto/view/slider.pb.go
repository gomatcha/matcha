// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/gomatcha/matcha/proto/view/slider.proto

package view

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Slider struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	MaxValue             float64  `protobuf:"fixed64,2,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
	MinValue             float64  `protobuf:"fixed64,3,opt,name=minValue,proto3" json:"minValue,omitempty"`
	Enabled              bool     `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Slider) Reset()         { *m = Slider{} }
func (m *Slider) String() string { return proto.CompactTextString(m) }
func (*Slider) ProtoMessage()    {}
func (*Slider) Descriptor() ([]byte, []int) {
	return fileDescriptor_21faf9e5301776cf, []int{0}
}
func (m *Slider) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Slider.Unmarshal(m, b)
}
func (m *Slider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Slider.Marshal(b, m, deterministic)
}
func (m *Slider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Slider.Merge(m, src)
}
func (m *Slider) XXX_Size() int {
	return xxx_messageInfo_Slider.Size(m)
}
func (m *Slider) XXX_DiscardUnknown() {
	xxx_messageInfo_Slider.DiscardUnknown(m)
}

var xxx_messageInfo_Slider proto.InternalMessageInfo

func (m *Slider) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Slider) GetMaxValue() float64 {
	if m != nil {
		return m.MaxValue
	}
	return 0
}

func (m *Slider) GetMinValue() float64 {
	if m != nil {
		return m.MinValue
	}
	return 0
}

func (m *Slider) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

type SliderEvent struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SliderEvent) Reset()         { *m = SliderEvent{} }
func (m *SliderEvent) String() string { return proto.CompactTextString(m) }
func (*SliderEvent) ProtoMessage()    {}
func (*SliderEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_21faf9e5301776cf, []int{1}
}
func (m *SliderEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SliderEvent.Unmarshal(m, b)
}
func (m *SliderEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SliderEvent.Marshal(b, m, deterministic)
}
func (m *SliderEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SliderEvent.Merge(m, src)
}
func (m *SliderEvent) XXX_Size() int {
	return xxx_messageInfo_SliderEvent.Size(m)
}
func (m *SliderEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SliderEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SliderEvent proto.InternalMessageInfo

func (m *SliderEvent) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*Slider)(nil), "matcha.view.Slider")
	proto.RegisterType((*SliderEvent)(nil), "matcha.view.SliderEvent")
}

func init() {
	proto.RegisterFile("github.com/gomatcha/matcha/proto/view/slider.proto", fileDescriptor_21faf9e5301776cf)
}

var fileDescriptor_21faf9e5301776cf = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x4a, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcf, 0xcf, 0x4d, 0x2c, 0x49, 0xce, 0x48, 0xd4,
	0x87, 0x52, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0xfa, 0x65, 0x99, 0xa9, 0xe5, 0xfa, 0xc5, 0x39, 0x99,
	0x29, 0xa9, 0x45, 0x7a, 0x60, 0x11, 0x21, 0x6e, 0x88, 0xbc, 0x1e, 0x48, 0x46, 0xa9, 0x80, 0x8b,
	0x2d, 0x18, 0x2c, 0x29, 0x24, 0xc2, 0xc5, 0x5a, 0x96, 0x98, 0x53, 0x9a, 0x2a, 0xc1, 0xa8, 0xc0,
	0xa8, 0xc1, 0x18, 0x04, 0xe1, 0x08, 0x49, 0x71, 0x71, 0xe4, 0x26, 0x56, 0x84, 0x81, 0x25, 0x98,
	0xc0, 0x12, 0x70, 0x3e, 0x58, 0x2e, 0x33, 0x0f, 0x22, 0xc7, 0x0c, 0x95, 0x83, 0xf2, 0x85, 0x24,
	0xb8, 0xd8, 0x53, 0xf3, 0x12, 0x93, 0x72, 0x52, 0x53, 0x24, 0x58, 0x14, 0x18, 0x35, 0x38, 0x82,
	0x60, 0x5c, 0x25, 0x65, 0x2e, 0x6e, 0x88, 0x8d, 0xae, 0x65, 0xa9, 0x79, 0x25, 0xd8, 0xad, 0x75,
	0x72, 0xe3, 0x52, 0x4d, 0xce, 0xcf, 0xd5, 0x83, 0xfa, 0x0e, 0xe6, 0x33, 0x3d, 0x28, 0x05, 0xf6,
	0x07, 0xd8, 0xfd, 0x4e, 0x1c, 0x01, 0x49, 0x10, 0xd3, 0xa2, 0x58, 0x40, 0xfc, 0x45, 0x4c, 0x3c,
	0xbe, 0x60, 0x35, 0x61, 0x99, 0xa9, 0xe5, 0x01, 0x49, 0x49, 0x6c, 0x60, 0xa5, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x47, 0xbc, 0x96, 0x44, 0x28, 0x01, 0x00, 0x00,
}
