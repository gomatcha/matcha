// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/gomatcha/matcha/proto/view/imageview.proto

package view

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import proto1 "github.com/gomatcha/matcha/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ImageResizeMode int32

const (
	ImageResizeMode_FIT     ImageResizeMode = 0
	ImageResizeMode_FILL    ImageResizeMode = 1
	ImageResizeMode_STRETCH ImageResizeMode = 2
	ImageResizeMode_CENTER  ImageResizeMode = 3
)

var ImageResizeMode_name = map[int32]string{
	0: "FIT",
	1: "FILL",
	2: "STRETCH",
	3: "CENTER",
}

var ImageResizeMode_value = map[string]int32{
	"FIT":     0,
	"FILL":    1,
	"STRETCH": 2,
	"CENTER":  3,
}

func (x ImageResizeMode) String() string {
	return proto.EnumName(ImageResizeMode_name, int32(x))
}

func (ImageResizeMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_91f3c16918f442cd, []int{0}
}

type ImageView struct {
	Image                *proto1.ImageOrResource `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	ResizeMode           ImageResizeMode         `protobuf:"varint,2,opt,name=resizeMode,proto3,enum=matcha.view.ImageResizeMode" json:"resizeMode,omitempty"`
	Tint                 *proto1.Color           `protobuf:"bytes,3,opt,name=tint,proto3" json:"tint,omitempty"`
	Scale                float64                 `protobuf:"fixed64,5,opt,name=scale,proto3" json:"scale,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ImageView) Reset()         { *m = ImageView{} }
func (m *ImageView) String() string { return proto.CompactTextString(m) }
func (*ImageView) ProtoMessage()    {}
func (*ImageView) Descriptor() ([]byte, []int) {
	return fileDescriptor_91f3c16918f442cd, []int{0}
}
func (m *ImageView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageView.Unmarshal(m, b)
}
func (m *ImageView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageView.Marshal(b, m, deterministic)
}
func (m *ImageView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageView.Merge(m, src)
}
func (m *ImageView) XXX_Size() int {
	return xxx_messageInfo_ImageView.Size(m)
}
func (m *ImageView) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageView.DiscardUnknown(m)
}

var xxx_messageInfo_ImageView proto.InternalMessageInfo

func (m *ImageView) GetImage() *proto1.ImageOrResource {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *ImageView) GetResizeMode() ImageResizeMode {
	if m != nil {
		return m.ResizeMode
	}
	return ImageResizeMode_FIT
}

func (m *ImageView) GetTint() *proto1.Color {
	if m != nil {
		return m.Tint
	}
	return nil
}

func (m *ImageView) GetScale() float64 {
	if m != nil {
		return m.Scale
	}
	return 0
}

func init() {
	proto.RegisterType((*ImageView)(nil), "matcha.view.ImageView")
	proto.RegisterEnum("matcha.view.ImageResizeMode", ImageResizeMode_name, ImageResizeMode_value)
}

func init() {
	proto.RegisterFile("github.com/gomatcha/matcha/proto/view/imageview.proto", fileDescriptor_91f3c16918f442cd)
}

var fileDescriptor_91f3c16918f442cd = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0xdd, 0xfc, 0x69, 0x75, 0xe2, 0x9f, 0xb0, 0x08, 0x06, 0xf1, 0x10, 0x05, 0x21, 0x88,
	0x6e, 0xa0, 0xe2, 0x4d, 0x2f, 0x09, 0x29, 0x06, 0x5a, 0x2d, 0x6b, 0xf0, 0xe0, 0x2d, 0x89, 0x4b,
	0xba, 0xd0, 0xb8, 0x92, 0xa4, 0x16, 0x7c, 0x1c, 0xdf, 0xc0, 0x37, 0x94, 0xec, 0x26, 0xa5, 0x78,
	0xe9, 0x69, 0x77, 0xbe, 0xf9, 0x7d, 0x33, 0xc3, 0x07, 0x77, 0x05, 0x6f, 0xe6, 0xcb, 0x8c, 0xe4,
	0xa2, 0xf4, 0x0b, 0x51, 0xa6, 0x4d, 0x3e, 0x4f, 0xfd, 0xee, 0xf9, 0xac, 0x44, 0x23, 0xfc, 0x2f,
	0xce, 0x56, 0x3e, 0x2f, 0xd3, 0x82, 0xb5, 0x3f, 0x22, 0x45, 0x6c, 0x29, 0x84, 0xb4, 0xd2, 0xe9,
	0xf5, 0xd6, 0x19, 0xd2, 0xae, 0xac, 0x17, 0xbf, 0x08, 0xf6, 0xe2, 0xb6, 0x7e, 0xe5, 0x6c, 0x85,
	0x6f, 0xc0, 0x94, 0x4d, 0x07, 0xb9, 0xc8, 0xb3, 0x46, 0x27, 0xa4, 0x1b, 0x2c, 0x89, 0xe7, 0x8a,
	0xb2, 0x5a, 0x2c, 0xab, 0x9c, 0x51, 0x45, 0xe1, 0x7b, 0x80, 0x8a, 0xd5, 0xfc, 0x9b, 0x4d, 0xc5,
	0x3b, 0x73, 0x34, 0x17, 0x79, 0x87, 0xa3, 0x33, 0xb2, 0x71, 0x8c, 0x32, 0xd2, 0x35, 0x43, 0x37,
	0x78, 0x7c, 0x0e, 0x46, 0xc3, 0x3f, 0x1a, 0x47, 0x97, 0xbb, 0x0e, 0x7a, 0x5f, 0x28, 0x16, 0xa2,
	0xa2, 0xb2, 0x85, 0x8f, 0xc1, 0xac, 0xf3, 0x74, 0xc1, 0x1c, 0xd3, 0x45, 0x1e, 0xa2, 0xaa, 0xb8,
	0x7a, 0x80, 0xa3, 0x7f, 0x73, 0xf1, 0x10, 0xf4, 0x71, 0x9c, 0xd8, 0x3b, 0x78, 0x17, 0x8c, 0x71,
	0x3c, 0x99, 0xd8, 0x08, 0x5b, 0x30, 0x7c, 0x49, 0x68, 0x94, 0x84, 0x8f, 0xb6, 0x86, 0x01, 0x06,
	0x61, 0xf4, 0x94, 0x44, 0xd4, 0xd6, 0x83, 0x18, 0x2e, 0x73, 0x51, 0x92, 0x2e, 0xa6, 0x3e, 0xa2,
	0x7e, 0xbd, 0x8c, 0x45, 0x1e, 0x1f, 0x58, 0xb3, 0x6c, 0x1d, 0xcd, 0x9b, 0xd1, 0x4a, 0x3f, 0xda,
	0xfe, 0x54, 0x62, 0xad, 0x34, 0x0b, 0xb2, 0x81, 0xa4, 0x6f, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff,
	0xb6, 0xef, 0x0e, 0xf1, 0xb8, 0x01, 0x00, 0x00,
}
