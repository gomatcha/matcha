// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/gomatcha/matcha/proto/view/view.proto

package view

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BuildNode struct {
	Id                   int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BuildId              int64             `protobuf:"varint,2,opt,name=buildId,proto3" json:"buildId,omitempty"`
	BridgeName           string            `protobuf:"bytes,3,opt,name=bridgeName,proto3" json:"bridgeName,omitempty"`
	BridgeValue          []byte            `protobuf:"bytes,4,opt,name=bridgeValue,proto3" json:"bridgeValue,omitempty"`
	Values               map[string][]byte `protobuf:"bytes,5,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Children             []int64           `protobuf:"varint,6,rep,packed,name=children,proto3" json:"children,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BuildNode) Reset()         { *m = BuildNode{} }
func (m *BuildNode) String() string { return proto.CompactTextString(m) }
func (*BuildNode) ProtoMessage()    {}
func (*BuildNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6e6cfc7b7beb7ba, []int{0}
}
func (m *BuildNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildNode.Unmarshal(m, b)
}
func (m *BuildNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildNode.Marshal(b, m, deterministic)
}
func (m *BuildNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildNode.Merge(m, src)
}
func (m *BuildNode) XXX_Size() int {
	return xxx_messageInfo_BuildNode.Size(m)
}
func (m *BuildNode) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildNode.DiscardUnknown(m)
}

var xxx_messageInfo_BuildNode proto.InternalMessageInfo

func (m *BuildNode) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BuildNode) GetBuildId() int64 {
	if m != nil {
		return m.BuildId
	}
	return 0
}

func (m *BuildNode) GetBridgeName() string {
	if m != nil {
		return m.BridgeName
	}
	return ""
}

func (m *BuildNode) GetBridgeValue() []byte {
	if m != nil {
		return m.BridgeValue
	}
	return nil
}

func (m *BuildNode) GetValues() map[string][]byte {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *BuildNode) GetChildren() []int64 {
	if m != nil {
		return m.Children
	}
	return nil
}

type LayoutPaintNode struct {
	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LayoutId int64 `protobuf:"varint,2,opt,name=layoutId,proto3" json:"layoutId,omitempty"`
	PaintId  int64 `protobuf:"varint,3,opt,name=paintId,proto3" json:"paintId,omitempty"`
	// Guide
	Minx       float64 `protobuf:"fixed64,4,opt,name=minx,proto3" json:"minx,omitempty"`
	Miny       float64 `protobuf:"fixed64,5,opt,name=miny,proto3" json:"miny,omitempty"`
	Maxx       float64 `protobuf:"fixed64,6,opt,name=maxx,proto3" json:"maxx,omitempty"`
	Maxy       float64 `protobuf:"fixed64,7,opt,name=maxy,proto3" json:"maxy,omitempty"`
	ZIndex     int64   `protobuf:"varint,8,opt,name=zIndex,proto3" json:"zIndex,omitempty"`
	ChildOrder []int64 `protobuf:"varint,9,rep,packed,name=childOrder,proto3" json:"childOrder,omitempty"`
	// Paint
	Transparency         float64  `protobuf:"fixed64,10,opt,name=transparency,proto3" json:"transparency,omitempty"`
	HasBackgroundColor   bool     `protobuf:"varint,11,opt,name=hasBackgroundColor,proto3" json:"hasBackgroundColor,omitempty"`
	BackgroundColorRed   uint32   `protobuf:"varint,12,opt,name=backgroundColorRed,proto3" json:"backgroundColorRed,omitempty"`
	BackgroundColorGreen uint32   `protobuf:"varint,13,opt,name=backgroundColorGreen,proto3" json:"backgroundColorGreen,omitempty"`
	BackgroundColorBlue  uint32   `protobuf:"varint,14,opt,name=backgroundColorBlue,proto3" json:"backgroundColorBlue,omitempty"`
	BackgroundColorAlpha uint32   `protobuf:"varint,15,opt,name=backgroundColorAlpha,proto3" json:"backgroundColorAlpha,omitempty"`
	HasBorderColor       bool     `protobuf:"varint,16,opt,name=hasBorderColor,proto3" json:"hasBorderColor,omitempty"`
	BorderColorRed       uint32   `protobuf:"varint,17,opt,name=borderColorRed,proto3" json:"borderColorRed,omitempty"`
	BorderColorGreen     uint32   `protobuf:"varint,18,opt,name=borderColorGreen,proto3" json:"borderColorGreen,omitempty"`
	BorderColorBlue      uint32   `protobuf:"varint,19,opt,name=borderColorBlue,proto3" json:"borderColorBlue,omitempty"`
	BorderColorAlpha     uint32   `protobuf:"varint,20,opt,name=borderColorAlpha,proto3" json:"borderColorAlpha,omitempty"`
	BorderWidth          float64  `protobuf:"fixed64,21,opt,name=borderWidth,proto3" json:"borderWidth,omitempty"`
	CornerRadius         float64  `protobuf:"fixed64,22,opt,name=cornerRadius,proto3" json:"cornerRadius,omitempty"`
	ShadowRadius         float64  `protobuf:"fixed64,23,opt,name=shadowRadius,proto3" json:"shadowRadius,omitempty"`
	ShadowOffsetX        float64  `protobuf:"fixed64,24,opt,name=shadowOffsetX,proto3" json:"shadowOffsetX,omitempty"`
	ShadowOffsetY        float64  `protobuf:"fixed64,25,opt,name=shadowOffsetY,proto3" json:"shadowOffsetY,omitempty"`
	HasShadowColor       bool     `protobuf:"varint,26,opt,name=hasShadowColor,proto3" json:"hasShadowColor,omitempty"`
	ShadowColorRed       uint32   `protobuf:"varint,27,opt,name=shadowColorRed,proto3" json:"shadowColorRed,omitempty"`
	ShadowColorBlue      uint32   `protobuf:"varint,28,opt,name=shadowColorBlue,proto3" json:"shadowColorBlue,omitempty"`
	ShadowColorGreen     uint32   `protobuf:"varint,29,opt,name=shadowColorGreen,proto3" json:"shadowColorGreen,omitempty"`
	ShadowColorAlpha     uint32   `protobuf:"varint,30,opt,name=shadowColorAlpha,proto3" json:"shadowColorAlpha,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LayoutPaintNode) Reset()         { *m = LayoutPaintNode{} }
func (m *LayoutPaintNode) String() string { return proto.CompactTextString(m) }
func (*LayoutPaintNode) ProtoMessage()    {}
func (*LayoutPaintNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6e6cfc7b7beb7ba, []int{1}
}
func (m *LayoutPaintNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LayoutPaintNode.Unmarshal(m, b)
}
func (m *LayoutPaintNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LayoutPaintNode.Marshal(b, m, deterministic)
}
func (m *LayoutPaintNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LayoutPaintNode.Merge(m, src)
}
func (m *LayoutPaintNode) XXX_Size() int {
	return xxx_messageInfo_LayoutPaintNode.Size(m)
}
func (m *LayoutPaintNode) XXX_DiscardUnknown() {
	xxx_messageInfo_LayoutPaintNode.DiscardUnknown(m)
}

var xxx_messageInfo_LayoutPaintNode proto.InternalMessageInfo

func (m *LayoutPaintNode) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LayoutPaintNode) GetLayoutId() int64 {
	if m != nil {
		return m.LayoutId
	}
	return 0
}

func (m *LayoutPaintNode) GetPaintId() int64 {
	if m != nil {
		return m.PaintId
	}
	return 0
}

func (m *LayoutPaintNode) GetMinx() float64 {
	if m != nil {
		return m.Minx
	}
	return 0
}

func (m *LayoutPaintNode) GetMiny() float64 {
	if m != nil {
		return m.Miny
	}
	return 0
}

func (m *LayoutPaintNode) GetMaxx() float64 {
	if m != nil {
		return m.Maxx
	}
	return 0
}

func (m *LayoutPaintNode) GetMaxy() float64 {
	if m != nil {
		return m.Maxy
	}
	return 0
}

func (m *LayoutPaintNode) GetZIndex() int64 {
	if m != nil {
		return m.ZIndex
	}
	return 0
}

func (m *LayoutPaintNode) GetChildOrder() []int64 {
	if m != nil {
		return m.ChildOrder
	}
	return nil
}

func (m *LayoutPaintNode) GetTransparency() float64 {
	if m != nil {
		return m.Transparency
	}
	return 0
}

func (m *LayoutPaintNode) GetHasBackgroundColor() bool {
	if m != nil {
		return m.HasBackgroundColor
	}
	return false
}

func (m *LayoutPaintNode) GetBackgroundColorRed() uint32 {
	if m != nil {
		return m.BackgroundColorRed
	}
	return 0
}

func (m *LayoutPaintNode) GetBackgroundColorGreen() uint32 {
	if m != nil {
		return m.BackgroundColorGreen
	}
	return 0
}

func (m *LayoutPaintNode) GetBackgroundColorBlue() uint32 {
	if m != nil {
		return m.BackgroundColorBlue
	}
	return 0
}

func (m *LayoutPaintNode) GetBackgroundColorAlpha() uint32 {
	if m != nil {
		return m.BackgroundColorAlpha
	}
	return 0
}

func (m *LayoutPaintNode) GetHasBorderColor() bool {
	if m != nil {
		return m.HasBorderColor
	}
	return false
}

func (m *LayoutPaintNode) GetBorderColorRed() uint32 {
	if m != nil {
		return m.BorderColorRed
	}
	return 0
}

func (m *LayoutPaintNode) GetBorderColorGreen() uint32 {
	if m != nil {
		return m.BorderColorGreen
	}
	return 0
}

func (m *LayoutPaintNode) GetBorderColorBlue() uint32 {
	if m != nil {
		return m.BorderColorBlue
	}
	return 0
}

func (m *LayoutPaintNode) GetBorderColorAlpha() uint32 {
	if m != nil {
		return m.BorderColorAlpha
	}
	return 0
}

func (m *LayoutPaintNode) GetBorderWidth() float64 {
	if m != nil {
		return m.BorderWidth
	}
	return 0
}

func (m *LayoutPaintNode) GetCornerRadius() float64 {
	if m != nil {
		return m.CornerRadius
	}
	return 0
}

func (m *LayoutPaintNode) GetShadowRadius() float64 {
	if m != nil {
		return m.ShadowRadius
	}
	return 0
}

func (m *LayoutPaintNode) GetShadowOffsetX() float64 {
	if m != nil {
		return m.ShadowOffsetX
	}
	return 0
}

func (m *LayoutPaintNode) GetShadowOffsetY() float64 {
	if m != nil {
		return m.ShadowOffsetY
	}
	return 0
}

func (m *LayoutPaintNode) GetHasShadowColor() bool {
	if m != nil {
		return m.HasShadowColor
	}
	return false
}

func (m *LayoutPaintNode) GetShadowColorRed() uint32 {
	if m != nil {
		return m.ShadowColorRed
	}
	return 0
}

func (m *LayoutPaintNode) GetShadowColorBlue() uint32 {
	if m != nil {
		return m.ShadowColorBlue
	}
	return 0
}

func (m *LayoutPaintNode) GetShadowColorGreen() uint32 {
	if m != nil {
		return m.ShadowColorGreen
	}
	return 0
}

func (m *LayoutPaintNode) GetShadowColorAlpha() uint32 {
	if m != nil {
		return m.ShadowColorAlpha
	}
	return 0
}

type Root struct {
	LayoutPaintNodes     map[int64]*LayoutPaintNode `protobuf:"bytes,2,rep,name=layoutPaintNodes,proto3" json:"layoutPaintNodes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BuildNodes           map[int64]*BuildNode       `protobuf:"bytes,3,rep,name=buildNodes,proto3" json:"buildNodes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Middleware           map[string]*any.Any        `protobuf:"bytes,4,rep,name=middleware,proto3" json:"middleware,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Root) Reset()         { *m = Root{} }
func (m *Root) String() string { return proto.CompactTextString(m) }
func (*Root) ProtoMessage()    {}
func (*Root) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6e6cfc7b7beb7ba, []int{2}
}
func (m *Root) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Root.Unmarshal(m, b)
}
func (m *Root) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Root.Marshal(b, m, deterministic)
}
func (m *Root) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Root.Merge(m, src)
}
func (m *Root) XXX_Size() int {
	return xxx_messageInfo_Root.Size(m)
}
func (m *Root) XXX_DiscardUnknown() {
	xxx_messageInfo_Root.DiscardUnknown(m)
}

var xxx_messageInfo_Root proto.InternalMessageInfo

func (m *Root) GetLayoutPaintNodes() map[int64]*LayoutPaintNode {
	if m != nil {
		return m.LayoutPaintNodes
	}
	return nil
}

func (m *Root) GetBuildNodes() map[int64]*BuildNode {
	if m != nil {
		return m.BuildNodes
	}
	return nil
}

func (m *Root) GetMiddleware() map[string]*any.Any {
	if m != nil {
		return m.Middleware
	}
	return nil
}

func init() {
	proto.RegisterType((*BuildNode)(nil), "matcha.view.BuildNode")
	proto.RegisterMapType((map[string][]byte)(nil), "matcha.view.BuildNode.ValuesEntry")
	proto.RegisterType((*LayoutPaintNode)(nil), "matcha.view.LayoutPaintNode")
	proto.RegisterType((*Root)(nil), "matcha.view.Root")
	proto.RegisterMapType((map[int64]*BuildNode)(nil), "matcha.view.Root.BuildNodesEntry")
	proto.RegisterMapType((map[int64]*LayoutPaintNode)(nil), "matcha.view.Root.LayoutPaintNodesEntry")
	proto.RegisterMapType((map[string]*any.Any)(nil), "matcha.view.Root.MiddlewareEntry")
}

func init() {
	proto.RegisterFile("github.com/gomatcha/matcha/proto/view/view.proto", fileDescriptor_f6e6cfc7b7beb7ba)
}

var fileDescriptor_f6e6cfc7b7beb7ba = []byte{
	// 811 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x95, 0xdf, 0x8e, 0xda, 0x46,
	0x14, 0xc6, 0x65, 0xcc, 0x12, 0x38, 0xb0, 0x0b, 0x9d, 0x90, 0xed, 0x84, 0xa6, 0x91, 0x8b, 0xfa,
	0xc7, 0x8a, 0x2a, 0x13, 0xd1, 0x9b, 0x36, 0x77, 0x4b, 0x5b, 0x55, 0x2b, 0x35, 0xc9, 0xca, 0xab,
	0xa6, 0x4d, 0xef, 0xc6, 0xcc, 0x2c, 0x58, 0x31, 0x1e, 0x64, 0x9b, 0x05, 0xf7, 0x11, 0xfa, 0x18,
	0x7d, 0xa9, 0xbe, 0x46, 0x1f, 0xa1, 0x9a, 0x33, 0xc6, 0x3b, 0x36, 0xce, 0xcd, 0xae, 0xcf, 0x6f,
	0xbe, 0xf9, 0x3c, 0xe7, 0x1c, 0x73, 0x06, 0x5e, 0xae, 0xc2, 0x6c, 0xbd, 0x0b, 0xbc, 0xa5, 0xdc,
	0xcc, 0x56, 0x72, 0xc3, 0xb2, 0xe5, 0x9a, 0xcd, 0x8a, 0x7f, 0xdb, 0x44, 0x66, 0x72, 0x76, 0x1f,
	0x8a, 0x3d, 0xfe, 0xf1, 0x30, 0x26, 0x7d, 0xbd, 0xea, 0x29, 0x34, 0x79, 0xba, 0x92, 0x72, 0x15,
	0x09, 0x2d, 0x0d, 0x76, 0x77, 0x33, 0x16, 0xe7, 0x5a, 0x37, 0xfd, 0xbb, 0x05, 0xbd, 0xc5, 0x2e,
	0x8c, 0xf8, 0x1b, 0xc9, 0x05, 0xb9, 0x80, 0x56, 0xc8, 0xa9, 0xe5, 0x58, 0xae, 0xed, 0xb7, 0x42,
	0x4e, 0x28, 0x3c, 0x0a, 0xd4, 0xe2, 0x35, 0xa7, 0x2d, 0x84, 0xc7, 0x90, 0x3c, 0x07, 0x08, 0x92,
	0x90, 0xaf, 0xc4, 0x1b, 0xb6, 0x11, 0xd4, 0x76, 0x2c, 0xb7, 0xe7, 0x1b, 0x84, 0x38, 0xd0, 0xd7,
	0xd1, 0x3b, 0x16, 0xed, 0x04, 0x6d, 0x3b, 0x96, 0x3b, 0xf0, 0x4d, 0x44, 0x5e, 0x41, 0xe7, 0x5e,
	0x3d, 0xa4, 0xf4, 0xcc, 0xb1, 0xdd, 0xfe, 0x7c, 0xea, 0x19, 0x47, 0xf6, 0xca, 0x33, 0x79, 0xa8,
	0x4e, 0x7f, 0x8e, 0xb3, 0x24, 0xf7, 0x8b, 0x1d, 0x64, 0x02, 0xdd, 0xe5, 0x3a, 0x8c, 0x78, 0x22,
	0x62, 0xda, 0x71, 0x6c, 0xd7, 0xf6, 0xcb, 0x78, 0xf2, 0x03, 0xf4, 0x8d, 0x2d, 0x64, 0x04, 0xf6,
	0x07, 0x91, 0x63, 0x4e, 0x3d, 0x5f, 0x3d, 0x92, 0x31, 0x9c, 0xa1, 0x0d, 0xa6, 0x34, 0xf0, 0x75,
	0xf0, 0xaa, 0xf5, 0xbd, 0x35, 0xfd, 0xb7, 0x0b, 0xc3, 0x5f, 0x59, 0x2e, 0x77, 0xd9, 0x0d, 0x0b,
	0xe3, 0xac, 0xb1, 0x24, 0x13, 0xe8, 0x46, 0x28, 0x29, 0x6b, 0x52, 0xc6, 0xaa, 0x5c, 0x5b, 0xb5,
	0xf1, 0x9a, 0x63, 0x45, 0x6c, 0xff, 0x18, 0x12, 0x02, 0xed, 0x4d, 0x18, 0x1f, 0xb0, 0x0e, 0x96,
	0x8f, 0xcf, 0x05, 0xcb, 0xe9, 0x59, 0xc9, 0x72, 0x64, 0xec, 0x70, 0xa0, 0x9d, 0x82, 0xb1, 0xc3,
	0xa1, 0x60, 0x39, 0x7d, 0x54, 0xb2, 0x9c, 0x5c, 0x42, 0xe7, 0xaf, 0xeb, 0x98, 0x8b, 0x03, 0xed,
	0xe2, 0x8b, 0x8a, 0x48, 0xb5, 0x05, 0x0b, 0xf1, 0x36, 0xe1, 0x22, 0xa1, 0x3d, 0x2c, 0x8d, 0x41,
	0xc8, 0x14, 0x06, 0x59, 0xc2, 0xe2, 0x74, 0xcb, 0x12, 0x11, 0x2f, 0x73, 0x0a, 0xe8, 0x59, 0x61,
	0xc4, 0x03, 0xb2, 0x66, 0xe9, 0x82, 0x2d, 0x3f, 0xac, 0x12, 0xb9, 0x8b, 0xf9, 0x8f, 0x32, 0x92,
	0x09, 0xed, 0x3b, 0x96, 0xdb, 0xf5, 0x1b, 0x56, 0x94, 0x3e, 0xa8, 0x22, 0x5f, 0x70, 0x3a, 0x70,
	0x2c, 0xf7, 0xdc, 0x6f, 0x58, 0x21, 0x73, 0x18, 0xd7, 0xe8, 0x2f, 0x89, 0x10, 0x31, 0x3d, 0xc7,
	0x1d, 0x8d, 0x6b, 0xe4, 0x25, 0x3c, 0xae, 0xf1, 0x85, 0xea, 0xe0, 0x05, 0x6e, 0x69, 0x5a, 0x6a,
	0x78, 0xcb, 0x55, 0xb4, 0x5d, 0x33, 0x3a, 0x6c, 0x7c, 0x0b, 0xae, 0x91, 0xaf, 0xe1, 0x42, 0xe5,
	0x27, 0x55, 0xa9, 0x74, 0xd6, 0x23, 0xcc, 0xba, 0x46, 0x95, 0x2e, 0x78, 0x08, 0x55, 0xb6, 0x9f,
	0xa0, 0x6b, 0x8d, 0x92, 0x17, 0x30, 0x32, 0x88, 0xce, 0x92, 0xa0, 0xf2, 0x84, 0x13, 0x17, 0x86,
	0x06, 0xc3, 0xec, 0x1e, 0xa3, 0xb4, 0x8e, 0x6b, 0xae, 0x3a, 0xab, 0xf1, 0x89, 0xab, 0xce, 0x48,
	0xfd, 0x0c, 0x91, 0xfd, 0x1e, 0xf2, 0x6c, 0x4d, 0x9f, 0x60, 0xbb, 0x4d, 0xa4, 0xbe, 0x88, 0xa5,
	0x4c, 0x62, 0x91, 0xf8, 0x8c, 0x87, 0xbb, 0x94, 0x5e, 0xea, 0x2f, 0xc2, 0x64, 0x4a, 0x93, 0xae,
	0x19, 0x97, 0xfb, 0x42, 0xf3, 0xa9, 0xd6, 0x98, 0x8c, 0x7c, 0x09, 0xe7, 0x3a, 0x7e, 0x7b, 0x77,
	0x97, 0x8a, 0xec, 0x0f, 0x4a, 0x51, 0x54, 0x85, 0x75, 0xd5, 0x7b, 0xfa, 0xf4, 0x54, 0xf5, 0xbe,
	0xe8, 0xc3, 0x2d, 0x32, 0xdd, 0x87, 0x49, 0xd9, 0x07, 0x83, 0x2a, 0x5d, 0xfa, 0x10, 0xaa, 0x3e,
	0x7c, 0xa6, 0xfb, 0x50, 0xa5, 0xaa, 0xb6, 0x06, 0xc1, 0xda, 0x3e, 0xd3, 0xb5, 0xad, 0x61, 0x55,
	0x5b, 0x03, 0xe9, 0x8e, 0x7d, 0xae, 0x6b, 0x5b, 0xe7, 0x35, 0xad, 0xee, 0xc3, 0xf3, 0x13, 0x2d,
	0xf2, 0xe9, 0x7f, 0x36, 0xb4, 0x7d, 0x29, 0x33, 0x72, 0x0b, 0xa3, 0xa8, 0x3a, 0x61, 0x52, 0xda,
	0xc2, 0xf9, 0xf7, 0x4d, 0x65, 0xfe, 0x29, 0xb1, 0x57, 0x9b, 0x45, 0xc5, 0x10, 0x3c, 0x31, 0x20,
	0x57, 0x00, 0xc1, 0x71, 0x5e, 0xa6, 0xd4, 0x46, 0xbb, 0x2f, 0x4e, 0xed, 0xca, 0x99, 0x5a, 0x18,
	0x19, 0x9b, 0x94, 0xc5, 0x26, 0xe4, 0x3c, 0x12, 0x7b, 0x96, 0xa8, 0x71, 0xfd, 0x11, 0x8b, 0xd7,
	0xa5, 0xa6, 0xb0, 0x78, 0xd8, 0x34, 0x61, 0xf0, 0xa4, 0xf1, 0xc0, 0xe6, 0x08, 0xb6, 0xf5, 0x08,
	0x9e, 0x9b, 0x23, 0xb8, 0x3f, 0x7f, 0x56, 0x79, 0x51, 0xcd, 0xc4, 0x18, 0xd0, 0x93, 0xdf, 0x60,
	0x58, 0x4b, 0xa2, 0xc1, 0xfc, 0xdb, 0xaa, 0xf9, 0x65, 0xf3, 0xbd, 0x62, 0xda, 0xde, 0xc2, 0xb0,
	0x96, 0x58, 0xc3, 0xb5, 0xf1, 0xa2, 0x6a, 0x3b, 0xf6, 0xf4, 0xa5, 0xea, 0x1d, 0x2f, 0x55, 0xef,
	0x2a, 0xce, 0x0d, 0xd3, 0xc5, 0x4f, 0xf0, 0xd5, 0x52, 0x6e, 0xbc, 0xe2, 0xe6, 0x3e, 0xde, 0xda,
	0xc7, 0xc3, 0xe0, 0x2e, 0x3c, 0xd2, 0xa2, 0x73, 0x13, 0xbc, 0x0b, 0xc5, 0xfe, 0xcf, 0xb6, 0x8a,
	0xfe, 0x69, 0x0d, 0x5e, 0xa3, 0x42, 0xa1, 0x9b, 0x45, 0xd0, 0x41, 0xe1, 0x77, 0xff, 0x07, 0x00,
	0x00, 0xff, 0xff, 0x8d, 0xc7, 0x91, 0x25, 0x02, 0x08, 0x00, 0x00,
}
