// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: github.com/gomatcha/matcha/proto/view/view.proto

package com.github.gomatcha.matcha.proto.view;

public final class PbView {
  private PbView() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BuildNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:matcha.view.BuildNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 id = 1;</code>
     */
    long getId();

    /**
     * <code>int64 buildId = 2;</code>
     */
    long getBuildId();

    /**
     * <code>string bridgeName = 3;</code>
     */
    java.lang.String getBridgeName();
    /**
     * <code>string bridgeName = 3;</code>
     */
    com.google.protobuf.ByteString
        getBridgeNameBytes();

    /**
     * <code>bytes bridgeValue = 4;</code>
     */
    com.google.protobuf.ByteString getBridgeValue();

    /**
     * <code>map&lt;string, bytes&gt; values = 5;</code>
     */
    int getValuesCount();
    /**
     * <code>map&lt;string, bytes&gt; values = 5;</code>
     */
    boolean containsValues(
        java.lang.String key);
    /**
     * Use {@link #getValuesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getValues();
    /**
     * <code>map&lt;string, bytes&gt; values = 5;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getValuesMap();
    /**
     * <code>map&lt;string, bytes&gt; values = 5;</code>
     */

    com.google.protobuf.ByteString getValuesOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <code>map&lt;string, bytes&gt; values = 5;</code>
     */

    com.google.protobuf.ByteString getValuesOrThrow(
        java.lang.String key);

    /**
     * <code>repeated int64 children = 6;</code>
     */
    java.util.List<java.lang.Long> getChildrenList();
    /**
     * <code>repeated int64 children = 6;</code>
     */
    int getChildrenCount();
    /**
     * <code>repeated int64 children = 6;</code>
     */
    long getChildren(int index);
  }
  /**
   * Protobuf type {@code matcha.view.BuildNode}
   */
  public  static final class BuildNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:matcha.view.BuildNode)
      BuildNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BuildNode.newBuilder() to construct.
    private BuildNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BuildNode() {
      id_ = 0L;
      buildId_ = 0L;
      bridgeName_ = "";
      bridgeValue_ = com.google.protobuf.ByteString.EMPTY;
      children_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BuildNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 16: {

              buildId_ = input.readInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              bridgeName_ = s;
              break;
            }
            case 34: {

              bridgeValue_ = input.readBytes();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                values_ = com.google.protobuf.MapField.newMapField(
                    ValuesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              values__ = input.readMessage(
                  ValuesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              values_.getMutableMap().put(
                  values__.getKey(), values__.getValue());
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                children_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              children_.add(input.readInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                children_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                children_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          children_ = java.util.Collections.unmodifiableList(children_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_BuildNode_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetValues();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_BuildNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.gomatcha.matcha.proto.view.PbView.BuildNode.class, com.github.gomatcha.matcha.proto.view.PbView.BuildNode.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int BUILDID_FIELD_NUMBER = 2;
    private long buildId_;
    /**
     * <code>int64 buildId = 2;</code>
     */
    public long getBuildId() {
      return buildId_;
    }

    public static final int BRIDGENAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object bridgeName_;
    /**
     * <code>string bridgeName = 3;</code>
     */
    public java.lang.String getBridgeName() {
      java.lang.Object ref = bridgeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bridgeName_ = s;
        return s;
      }
    }
    /**
     * <code>string bridgeName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getBridgeNameBytes() {
      java.lang.Object ref = bridgeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bridgeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BRIDGEVALUE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString bridgeValue_;
    /**
     * <code>bytes bridgeValue = 4;</code>
     */
    public com.google.protobuf.ByteString getBridgeValue() {
      return bridgeValue_;
    }

    public static final int VALUES_FIELD_NUMBER = 5;
    private static final class ValuesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_BuildNode_ValuesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> values_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetValues() {
      if (values_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ValuesDefaultEntryHolder.defaultEntry);
      }
      return values_;
    }

    public int getValuesCount() {
      return internalGetValues().getMap().size();
    }
    /**
     * <code>map&lt;string, bytes&gt; values = 5;</code>
     */

    public boolean containsValues(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetValues().getMap().containsKey(key);
    }
    /**
     * Use {@link #getValuesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getValues() {
      return getValuesMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; values = 5;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getValuesMap() {
      return internalGetValues().getMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; values = 5;</code>
     */

    public com.google.protobuf.ByteString getValuesOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetValues().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, bytes&gt; values = 5;</code>
     */

    public com.google.protobuf.ByteString getValuesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetValues().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CHILDREN_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Long> children_;
    /**
     * <code>repeated int64 children = 6;</code>
     */
    public java.util.List<java.lang.Long>
        getChildrenList() {
      return children_;
    }
    /**
     * <code>repeated int64 children = 6;</code>
     */
    public int getChildrenCount() {
      return children_.size();
    }
    /**
     * <code>repeated int64 children = 6;</code>
     */
    public long getChildren(int index) {
      return children_.get(index);
    }
    private int childrenMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (buildId_ != 0L) {
        output.writeInt64(2, buildId_);
      }
      if (!getBridgeNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, bridgeName_);
      }
      if (!bridgeValue_.isEmpty()) {
        output.writeBytes(4, bridgeValue_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetValues(),
          ValuesDefaultEntryHolder.defaultEntry,
          5);
      if (getChildrenList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(childrenMemoizedSerializedSize);
      }
      for (int i = 0; i < children_.size(); i++) {
        output.writeInt64NoTag(children_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (buildId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, buildId_);
      }
      if (!getBridgeNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, bridgeName_);
      }
      if (!bridgeValue_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, bridgeValue_);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetValues().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        values__ = ValuesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, values__);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < children_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(children_.get(i));
        }
        size += dataSize;
        if (!getChildrenList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        childrenMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.gomatcha.matcha.proto.view.PbView.BuildNode)) {
        return super.equals(obj);
      }
      com.github.gomatcha.matcha.proto.view.PbView.BuildNode other = (com.github.gomatcha.matcha.proto.view.PbView.BuildNode) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (getBuildId()
          == other.getBuildId());
      result = result && getBridgeName()
          .equals(other.getBridgeName());
      result = result && getBridgeValue()
          .equals(other.getBridgeValue());
      result = result && internalGetValues().equals(
          other.internalGetValues());
      result = result && getChildrenList()
          .equals(other.getChildrenList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + BUILDID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBuildId());
      hash = (37 * hash) + BRIDGENAME_FIELD_NUMBER;
      hash = (53 * hash) + getBridgeName().hashCode();
      hash = (37 * hash) + BRIDGEVALUE_FIELD_NUMBER;
      hash = (53 * hash) + getBridgeValue().hashCode();
      if (!internalGetValues().getMap().isEmpty()) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetValues().hashCode();
      }
      if (getChildrenCount() > 0) {
        hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
        hash = (53 * hash) + getChildrenList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.gomatcha.matcha.proto.view.PbView.BuildNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.BuildNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.BuildNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.BuildNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.BuildNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.BuildNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.BuildNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.BuildNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.BuildNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.BuildNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.BuildNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.BuildNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.gomatcha.matcha.proto.view.PbView.BuildNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matcha.view.BuildNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:matcha.view.BuildNode)
        com.github.gomatcha.matcha.proto.view.PbView.BuildNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_BuildNode_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetValues();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetMutableValues();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_BuildNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.gomatcha.matcha.proto.view.PbView.BuildNode.class, com.github.gomatcha.matcha.proto.view.PbView.BuildNode.Builder.class);
      }

      // Construct using com.github.gomatcha.matcha.proto.view.PbView.BuildNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0L;

        buildId_ = 0L;

        bridgeName_ = "";

        bridgeValue_ = com.google.protobuf.ByteString.EMPTY;

        internalGetMutableValues().clear();
        children_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_BuildNode_descriptor;
      }

      @java.lang.Override
      public com.github.gomatcha.matcha.proto.view.PbView.BuildNode getDefaultInstanceForType() {
        return com.github.gomatcha.matcha.proto.view.PbView.BuildNode.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.gomatcha.matcha.proto.view.PbView.BuildNode build() {
        com.github.gomatcha.matcha.proto.view.PbView.BuildNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.gomatcha.matcha.proto.view.PbView.BuildNode buildPartial() {
        com.github.gomatcha.matcha.proto.view.PbView.BuildNode result = new com.github.gomatcha.matcha.proto.view.PbView.BuildNode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.buildId_ = buildId_;
        result.bridgeName_ = bridgeName_;
        result.bridgeValue_ = bridgeValue_;
        result.values_ = internalGetValues();
        result.values_.makeImmutable();
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          children_ = java.util.Collections.unmodifiableList(children_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.children_ = children_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.gomatcha.matcha.proto.view.PbView.BuildNode) {
          return mergeFrom((com.github.gomatcha.matcha.proto.view.PbView.BuildNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.gomatcha.matcha.proto.view.PbView.BuildNode other) {
        if (other == com.github.gomatcha.matcha.proto.view.PbView.BuildNode.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.getBuildId() != 0L) {
          setBuildId(other.getBuildId());
        }
        if (!other.getBridgeName().isEmpty()) {
          bridgeName_ = other.bridgeName_;
          onChanged();
        }
        if (other.getBridgeValue() != com.google.protobuf.ByteString.EMPTY) {
          setBridgeValue(other.getBridgeValue());
        }
        internalGetMutableValues().mergeFrom(
            other.internalGetValues());
        if (!other.children_.isEmpty()) {
          if (children_.isEmpty()) {
            children_ = other.children_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureChildrenIsMutable();
            children_.addAll(other.children_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.gomatcha.matcha.proto.view.PbView.BuildNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.gomatcha.matcha.proto.view.PbView.BuildNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>int64 id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private long buildId_ ;
      /**
       * <code>int64 buildId = 2;</code>
       */
      public long getBuildId() {
        return buildId_;
      }
      /**
       * <code>int64 buildId = 2;</code>
       */
      public Builder setBuildId(long value) {
        
        buildId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 buildId = 2;</code>
       */
      public Builder clearBuildId() {
        
        buildId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object bridgeName_ = "";
      /**
       * <code>string bridgeName = 3;</code>
       */
      public java.lang.String getBridgeName() {
        java.lang.Object ref = bridgeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bridgeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string bridgeName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getBridgeNameBytes() {
        java.lang.Object ref = bridgeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bridgeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string bridgeName = 3;</code>
       */
      public Builder setBridgeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bridgeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string bridgeName = 3;</code>
       */
      public Builder clearBridgeName() {
        
        bridgeName_ = getDefaultInstance().getBridgeName();
        onChanged();
        return this;
      }
      /**
       * <code>string bridgeName = 3;</code>
       */
      public Builder setBridgeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        bridgeName_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bridgeValue_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes bridgeValue = 4;</code>
       */
      public com.google.protobuf.ByteString getBridgeValue() {
        return bridgeValue_;
      }
      /**
       * <code>bytes bridgeValue = 4;</code>
       */
      public Builder setBridgeValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bridgeValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes bridgeValue = 4;</code>
       */
      public Builder clearBridgeValue() {
        
        bridgeValue_ = getDefaultInstance().getBridgeValue();
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> values_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetValues() {
        if (values_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ValuesDefaultEntryHolder.defaultEntry);
        }
        return values_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableValues() {
        onChanged();;
        if (values_ == null) {
          values_ = com.google.protobuf.MapField.newMapField(
              ValuesDefaultEntryHolder.defaultEntry);
        }
        if (!values_.isMutable()) {
          values_ = values_.copy();
        }
        return values_;
      }

      public int getValuesCount() {
        return internalGetValues().getMap().size();
      }
      /**
       * <code>map&lt;string, bytes&gt; values = 5;</code>
       */

      public boolean containsValues(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetValues().getMap().containsKey(key);
      }
      /**
       * Use {@link #getValuesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getValues() {
        return getValuesMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; values = 5;</code>
       */

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getValuesMap() {
        return internalGetValues().getMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; values = 5;</code>
       */

      public com.google.protobuf.ByteString getValuesOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetValues().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, bytes&gt; values = 5;</code>
       */

      public com.google.protobuf.ByteString getValuesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetValues().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearValues() {
        internalGetMutableValues().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, bytes&gt; values = 5;</code>
       */

      public Builder removeValues(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableValues().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableValues() {
        return internalGetMutableValues().getMutableMap();
      }
      /**
       * <code>map&lt;string, bytes&gt; values = 5;</code>
       */
      public Builder putValues(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableValues().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, bytes&gt; values = 5;</code>
       */

      public Builder putAllValues(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableValues().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<java.lang.Long> children_ = java.util.Collections.emptyList();
      private void ensureChildrenIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          children_ = new java.util.ArrayList<java.lang.Long>(children_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int64 children = 6;</code>
       */
      public java.util.List<java.lang.Long>
          getChildrenList() {
        return java.util.Collections.unmodifiableList(children_);
      }
      /**
       * <code>repeated int64 children = 6;</code>
       */
      public int getChildrenCount() {
        return children_.size();
      }
      /**
       * <code>repeated int64 children = 6;</code>
       */
      public long getChildren(int index) {
        return children_.get(index);
      }
      /**
       * <code>repeated int64 children = 6;</code>
       */
      public Builder setChildren(
          int index, long value) {
        ensureChildrenIsMutable();
        children_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 children = 6;</code>
       */
      public Builder addChildren(long value) {
        ensureChildrenIsMutable();
        children_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 children = 6;</code>
       */
      public Builder addAllChildren(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureChildrenIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, children_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 children = 6;</code>
       */
      public Builder clearChildren() {
        children_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:matcha.view.BuildNode)
    }

    // @@protoc_insertion_point(class_scope:matcha.view.BuildNode)
    private static final com.github.gomatcha.matcha.proto.view.PbView.BuildNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.gomatcha.matcha.proto.view.PbView.BuildNode();
    }

    public static com.github.gomatcha.matcha.proto.view.PbView.BuildNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BuildNode>
        PARSER = new com.google.protobuf.AbstractParser<BuildNode>() {
      @java.lang.Override
      public BuildNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BuildNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BuildNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BuildNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.gomatcha.matcha.proto.view.PbView.BuildNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LayoutPaintNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:matcha.view.LayoutPaintNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 id = 1;</code>
     */
    long getId();

    /**
     * <code>int64 layoutId = 2;</code>
     */
    long getLayoutId();

    /**
     * <code>int64 paintId = 3;</code>
     */
    long getPaintId();

    /**
     * <pre>
     * Guide
     * </pre>
     *
     * <code>double minx = 4;</code>
     */
    double getMinx();

    /**
     * <code>double miny = 5;</code>
     */
    double getMiny();

    /**
     * <code>double maxx = 6;</code>
     */
    double getMaxx();

    /**
     * <code>double maxy = 7;</code>
     */
    double getMaxy();

    /**
     * <code>int64 zIndex = 8;</code>
     */
    long getZIndex();

    /**
     * <code>repeated int64 childOrder = 9;</code>
     */
    java.util.List<java.lang.Long> getChildOrderList();
    /**
     * <code>repeated int64 childOrder = 9;</code>
     */
    int getChildOrderCount();
    /**
     * <code>repeated int64 childOrder = 9;</code>
     */
    long getChildOrder(int index);

    /**
     * <pre>
     * Paint
     * </pre>
     *
     * <code>double transparency = 10;</code>
     */
    double getTransparency();

    /**
     * <code>bool hasBackgroundColor = 11;</code>
     */
    boolean getHasBackgroundColor();

    /**
     * <code>uint32 backgroundColorRed = 12;</code>
     */
    int getBackgroundColorRed();

    /**
     * <code>uint32 backgroundColorGreen = 13;</code>
     */
    int getBackgroundColorGreen();

    /**
     * <code>uint32 backgroundColorBlue = 14;</code>
     */
    int getBackgroundColorBlue();

    /**
     * <code>uint32 backgroundColorAlpha = 15;</code>
     */
    int getBackgroundColorAlpha();

    /**
     * <code>bool hasBorderColor = 16;</code>
     */
    boolean getHasBorderColor();

    /**
     * <code>uint32 borderColorRed = 17;</code>
     */
    int getBorderColorRed();

    /**
     * <code>uint32 borderColorGreen = 18;</code>
     */
    int getBorderColorGreen();

    /**
     * <code>uint32 borderColorBlue = 19;</code>
     */
    int getBorderColorBlue();

    /**
     * <code>uint32 borderColorAlpha = 20;</code>
     */
    int getBorderColorAlpha();

    /**
     * <code>double borderWidth = 21;</code>
     */
    double getBorderWidth();

    /**
     * <code>double cornerRadius = 22;</code>
     */
    double getCornerRadius();

    /**
     * <code>double shadowRadius = 23;</code>
     */
    double getShadowRadius();

    /**
     * <code>double shadowOffsetX = 24;</code>
     */
    double getShadowOffsetX();

    /**
     * <code>double shadowOffsetY = 25;</code>
     */
    double getShadowOffsetY();

    /**
     * <code>bool hasShadowColor = 26;</code>
     */
    boolean getHasShadowColor();

    /**
     * <code>uint32 shadowColorRed = 27;</code>
     */
    int getShadowColorRed();

    /**
     * <code>uint32 shadowColorBlue = 28;</code>
     */
    int getShadowColorBlue();

    /**
     * <code>uint32 shadowColorGreen = 29;</code>
     */
    int getShadowColorGreen();

    /**
     * <code>uint32 shadowColorAlpha = 30;</code>
     */
    int getShadowColorAlpha();
  }
  /**
   * Protobuf type {@code matcha.view.LayoutPaintNode}
   */
  public  static final class LayoutPaintNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:matcha.view.LayoutPaintNode)
      LayoutPaintNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LayoutPaintNode.newBuilder() to construct.
    private LayoutPaintNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LayoutPaintNode() {
      id_ = 0L;
      layoutId_ = 0L;
      paintId_ = 0L;
      minx_ = 0D;
      miny_ = 0D;
      maxx_ = 0D;
      maxy_ = 0D;
      zIndex_ = 0L;
      childOrder_ = java.util.Collections.emptyList();
      transparency_ = 0D;
      hasBackgroundColor_ = false;
      backgroundColorRed_ = 0;
      backgroundColorGreen_ = 0;
      backgroundColorBlue_ = 0;
      backgroundColorAlpha_ = 0;
      hasBorderColor_ = false;
      borderColorRed_ = 0;
      borderColorGreen_ = 0;
      borderColorBlue_ = 0;
      borderColorAlpha_ = 0;
      borderWidth_ = 0D;
      cornerRadius_ = 0D;
      shadowRadius_ = 0D;
      shadowOffsetX_ = 0D;
      shadowOffsetY_ = 0D;
      hasShadowColor_ = false;
      shadowColorRed_ = 0;
      shadowColorBlue_ = 0;
      shadowColorGreen_ = 0;
      shadowColorAlpha_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LayoutPaintNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 16: {

              layoutId_ = input.readInt64();
              break;
            }
            case 24: {

              paintId_ = input.readInt64();
              break;
            }
            case 33: {

              minx_ = input.readDouble();
              break;
            }
            case 41: {

              miny_ = input.readDouble();
              break;
            }
            case 49: {

              maxx_ = input.readDouble();
              break;
            }
            case 57: {

              maxy_ = input.readDouble();
              break;
            }
            case 64: {

              zIndex_ = input.readInt64();
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                childOrder_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000100;
              }
              childOrder_.add(input.readInt64());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                childOrder_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                childOrder_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 81: {

              transparency_ = input.readDouble();
              break;
            }
            case 88: {

              hasBackgroundColor_ = input.readBool();
              break;
            }
            case 96: {

              backgroundColorRed_ = input.readUInt32();
              break;
            }
            case 104: {

              backgroundColorGreen_ = input.readUInt32();
              break;
            }
            case 112: {

              backgroundColorBlue_ = input.readUInt32();
              break;
            }
            case 120: {

              backgroundColorAlpha_ = input.readUInt32();
              break;
            }
            case 128: {

              hasBorderColor_ = input.readBool();
              break;
            }
            case 136: {

              borderColorRed_ = input.readUInt32();
              break;
            }
            case 144: {

              borderColorGreen_ = input.readUInt32();
              break;
            }
            case 152: {

              borderColorBlue_ = input.readUInt32();
              break;
            }
            case 160: {

              borderColorAlpha_ = input.readUInt32();
              break;
            }
            case 169: {

              borderWidth_ = input.readDouble();
              break;
            }
            case 177: {

              cornerRadius_ = input.readDouble();
              break;
            }
            case 185: {

              shadowRadius_ = input.readDouble();
              break;
            }
            case 193: {

              shadowOffsetX_ = input.readDouble();
              break;
            }
            case 201: {

              shadowOffsetY_ = input.readDouble();
              break;
            }
            case 208: {

              hasShadowColor_ = input.readBool();
              break;
            }
            case 216: {

              shadowColorRed_ = input.readUInt32();
              break;
            }
            case 224: {

              shadowColorBlue_ = input.readUInt32();
              break;
            }
            case 232: {

              shadowColorGreen_ = input.readUInt32();
              break;
            }
            case 240: {

              shadowColorAlpha_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          childOrder_ = java.util.Collections.unmodifiableList(childOrder_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_LayoutPaintNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_LayoutPaintNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode.class, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int LAYOUTID_FIELD_NUMBER = 2;
    private long layoutId_;
    /**
     * <code>int64 layoutId = 2;</code>
     */
    public long getLayoutId() {
      return layoutId_;
    }

    public static final int PAINTID_FIELD_NUMBER = 3;
    private long paintId_;
    /**
     * <code>int64 paintId = 3;</code>
     */
    public long getPaintId() {
      return paintId_;
    }

    public static final int MINX_FIELD_NUMBER = 4;
    private double minx_;
    /**
     * <pre>
     * Guide
     * </pre>
     *
     * <code>double minx = 4;</code>
     */
    public double getMinx() {
      return minx_;
    }

    public static final int MINY_FIELD_NUMBER = 5;
    private double miny_;
    /**
     * <code>double miny = 5;</code>
     */
    public double getMiny() {
      return miny_;
    }

    public static final int MAXX_FIELD_NUMBER = 6;
    private double maxx_;
    /**
     * <code>double maxx = 6;</code>
     */
    public double getMaxx() {
      return maxx_;
    }

    public static final int MAXY_FIELD_NUMBER = 7;
    private double maxy_;
    /**
     * <code>double maxy = 7;</code>
     */
    public double getMaxy() {
      return maxy_;
    }

    public static final int ZINDEX_FIELD_NUMBER = 8;
    private long zIndex_;
    /**
     * <code>int64 zIndex = 8;</code>
     */
    public long getZIndex() {
      return zIndex_;
    }

    public static final int CHILDORDER_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Long> childOrder_;
    /**
     * <code>repeated int64 childOrder = 9;</code>
     */
    public java.util.List<java.lang.Long>
        getChildOrderList() {
      return childOrder_;
    }
    /**
     * <code>repeated int64 childOrder = 9;</code>
     */
    public int getChildOrderCount() {
      return childOrder_.size();
    }
    /**
     * <code>repeated int64 childOrder = 9;</code>
     */
    public long getChildOrder(int index) {
      return childOrder_.get(index);
    }
    private int childOrderMemoizedSerializedSize = -1;

    public static final int TRANSPARENCY_FIELD_NUMBER = 10;
    private double transparency_;
    /**
     * <pre>
     * Paint
     * </pre>
     *
     * <code>double transparency = 10;</code>
     */
    public double getTransparency() {
      return transparency_;
    }

    public static final int HASBACKGROUNDCOLOR_FIELD_NUMBER = 11;
    private boolean hasBackgroundColor_;
    /**
     * <code>bool hasBackgroundColor = 11;</code>
     */
    public boolean getHasBackgroundColor() {
      return hasBackgroundColor_;
    }

    public static final int BACKGROUNDCOLORRED_FIELD_NUMBER = 12;
    private int backgroundColorRed_;
    /**
     * <code>uint32 backgroundColorRed = 12;</code>
     */
    public int getBackgroundColorRed() {
      return backgroundColorRed_;
    }

    public static final int BACKGROUNDCOLORGREEN_FIELD_NUMBER = 13;
    private int backgroundColorGreen_;
    /**
     * <code>uint32 backgroundColorGreen = 13;</code>
     */
    public int getBackgroundColorGreen() {
      return backgroundColorGreen_;
    }

    public static final int BACKGROUNDCOLORBLUE_FIELD_NUMBER = 14;
    private int backgroundColorBlue_;
    /**
     * <code>uint32 backgroundColorBlue = 14;</code>
     */
    public int getBackgroundColorBlue() {
      return backgroundColorBlue_;
    }

    public static final int BACKGROUNDCOLORALPHA_FIELD_NUMBER = 15;
    private int backgroundColorAlpha_;
    /**
     * <code>uint32 backgroundColorAlpha = 15;</code>
     */
    public int getBackgroundColorAlpha() {
      return backgroundColorAlpha_;
    }

    public static final int HASBORDERCOLOR_FIELD_NUMBER = 16;
    private boolean hasBorderColor_;
    /**
     * <code>bool hasBorderColor = 16;</code>
     */
    public boolean getHasBorderColor() {
      return hasBorderColor_;
    }

    public static final int BORDERCOLORRED_FIELD_NUMBER = 17;
    private int borderColorRed_;
    /**
     * <code>uint32 borderColorRed = 17;</code>
     */
    public int getBorderColorRed() {
      return borderColorRed_;
    }

    public static final int BORDERCOLORGREEN_FIELD_NUMBER = 18;
    private int borderColorGreen_;
    /**
     * <code>uint32 borderColorGreen = 18;</code>
     */
    public int getBorderColorGreen() {
      return borderColorGreen_;
    }

    public static final int BORDERCOLORBLUE_FIELD_NUMBER = 19;
    private int borderColorBlue_;
    /**
     * <code>uint32 borderColorBlue = 19;</code>
     */
    public int getBorderColorBlue() {
      return borderColorBlue_;
    }

    public static final int BORDERCOLORALPHA_FIELD_NUMBER = 20;
    private int borderColorAlpha_;
    /**
     * <code>uint32 borderColorAlpha = 20;</code>
     */
    public int getBorderColorAlpha() {
      return borderColorAlpha_;
    }

    public static final int BORDERWIDTH_FIELD_NUMBER = 21;
    private double borderWidth_;
    /**
     * <code>double borderWidth = 21;</code>
     */
    public double getBorderWidth() {
      return borderWidth_;
    }

    public static final int CORNERRADIUS_FIELD_NUMBER = 22;
    private double cornerRadius_;
    /**
     * <code>double cornerRadius = 22;</code>
     */
    public double getCornerRadius() {
      return cornerRadius_;
    }

    public static final int SHADOWRADIUS_FIELD_NUMBER = 23;
    private double shadowRadius_;
    /**
     * <code>double shadowRadius = 23;</code>
     */
    public double getShadowRadius() {
      return shadowRadius_;
    }

    public static final int SHADOWOFFSETX_FIELD_NUMBER = 24;
    private double shadowOffsetX_;
    /**
     * <code>double shadowOffsetX = 24;</code>
     */
    public double getShadowOffsetX() {
      return shadowOffsetX_;
    }

    public static final int SHADOWOFFSETY_FIELD_NUMBER = 25;
    private double shadowOffsetY_;
    /**
     * <code>double shadowOffsetY = 25;</code>
     */
    public double getShadowOffsetY() {
      return shadowOffsetY_;
    }

    public static final int HASSHADOWCOLOR_FIELD_NUMBER = 26;
    private boolean hasShadowColor_;
    /**
     * <code>bool hasShadowColor = 26;</code>
     */
    public boolean getHasShadowColor() {
      return hasShadowColor_;
    }

    public static final int SHADOWCOLORRED_FIELD_NUMBER = 27;
    private int shadowColorRed_;
    /**
     * <code>uint32 shadowColorRed = 27;</code>
     */
    public int getShadowColorRed() {
      return shadowColorRed_;
    }

    public static final int SHADOWCOLORBLUE_FIELD_NUMBER = 28;
    private int shadowColorBlue_;
    /**
     * <code>uint32 shadowColorBlue = 28;</code>
     */
    public int getShadowColorBlue() {
      return shadowColorBlue_;
    }

    public static final int SHADOWCOLORGREEN_FIELD_NUMBER = 29;
    private int shadowColorGreen_;
    /**
     * <code>uint32 shadowColorGreen = 29;</code>
     */
    public int getShadowColorGreen() {
      return shadowColorGreen_;
    }

    public static final int SHADOWCOLORALPHA_FIELD_NUMBER = 30;
    private int shadowColorAlpha_;
    /**
     * <code>uint32 shadowColorAlpha = 30;</code>
     */
    public int getShadowColorAlpha() {
      return shadowColorAlpha_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (layoutId_ != 0L) {
        output.writeInt64(2, layoutId_);
      }
      if (paintId_ != 0L) {
        output.writeInt64(3, paintId_);
      }
      if (minx_ != 0D) {
        output.writeDouble(4, minx_);
      }
      if (miny_ != 0D) {
        output.writeDouble(5, miny_);
      }
      if (maxx_ != 0D) {
        output.writeDouble(6, maxx_);
      }
      if (maxy_ != 0D) {
        output.writeDouble(7, maxy_);
      }
      if (zIndex_ != 0L) {
        output.writeInt64(8, zIndex_);
      }
      if (getChildOrderList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(childOrderMemoizedSerializedSize);
      }
      for (int i = 0; i < childOrder_.size(); i++) {
        output.writeInt64NoTag(childOrder_.get(i));
      }
      if (transparency_ != 0D) {
        output.writeDouble(10, transparency_);
      }
      if (hasBackgroundColor_ != false) {
        output.writeBool(11, hasBackgroundColor_);
      }
      if (backgroundColorRed_ != 0) {
        output.writeUInt32(12, backgroundColorRed_);
      }
      if (backgroundColorGreen_ != 0) {
        output.writeUInt32(13, backgroundColorGreen_);
      }
      if (backgroundColorBlue_ != 0) {
        output.writeUInt32(14, backgroundColorBlue_);
      }
      if (backgroundColorAlpha_ != 0) {
        output.writeUInt32(15, backgroundColorAlpha_);
      }
      if (hasBorderColor_ != false) {
        output.writeBool(16, hasBorderColor_);
      }
      if (borderColorRed_ != 0) {
        output.writeUInt32(17, borderColorRed_);
      }
      if (borderColorGreen_ != 0) {
        output.writeUInt32(18, borderColorGreen_);
      }
      if (borderColorBlue_ != 0) {
        output.writeUInt32(19, borderColorBlue_);
      }
      if (borderColorAlpha_ != 0) {
        output.writeUInt32(20, borderColorAlpha_);
      }
      if (borderWidth_ != 0D) {
        output.writeDouble(21, borderWidth_);
      }
      if (cornerRadius_ != 0D) {
        output.writeDouble(22, cornerRadius_);
      }
      if (shadowRadius_ != 0D) {
        output.writeDouble(23, shadowRadius_);
      }
      if (shadowOffsetX_ != 0D) {
        output.writeDouble(24, shadowOffsetX_);
      }
      if (shadowOffsetY_ != 0D) {
        output.writeDouble(25, shadowOffsetY_);
      }
      if (hasShadowColor_ != false) {
        output.writeBool(26, hasShadowColor_);
      }
      if (shadowColorRed_ != 0) {
        output.writeUInt32(27, shadowColorRed_);
      }
      if (shadowColorBlue_ != 0) {
        output.writeUInt32(28, shadowColorBlue_);
      }
      if (shadowColorGreen_ != 0) {
        output.writeUInt32(29, shadowColorGreen_);
      }
      if (shadowColorAlpha_ != 0) {
        output.writeUInt32(30, shadowColorAlpha_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (layoutId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, layoutId_);
      }
      if (paintId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, paintId_);
      }
      if (minx_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, minx_);
      }
      if (miny_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, miny_);
      }
      if (maxx_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, maxx_);
      }
      if (maxy_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, maxy_);
      }
      if (zIndex_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, zIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < childOrder_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(childOrder_.get(i));
        }
        size += dataSize;
        if (!getChildOrderList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        childOrderMemoizedSerializedSize = dataSize;
      }
      if (transparency_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, transparency_);
      }
      if (hasBackgroundColor_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, hasBackgroundColor_);
      }
      if (backgroundColorRed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, backgroundColorRed_);
      }
      if (backgroundColorGreen_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, backgroundColorGreen_);
      }
      if (backgroundColorBlue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, backgroundColorBlue_);
      }
      if (backgroundColorAlpha_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, backgroundColorAlpha_);
      }
      if (hasBorderColor_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, hasBorderColor_);
      }
      if (borderColorRed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, borderColorRed_);
      }
      if (borderColorGreen_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, borderColorGreen_);
      }
      if (borderColorBlue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, borderColorBlue_);
      }
      if (borderColorAlpha_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, borderColorAlpha_);
      }
      if (borderWidth_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(21, borderWidth_);
      }
      if (cornerRadius_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(22, cornerRadius_);
      }
      if (shadowRadius_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(23, shadowRadius_);
      }
      if (shadowOffsetX_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(24, shadowOffsetX_);
      }
      if (shadowOffsetY_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(25, shadowOffsetY_);
      }
      if (hasShadowColor_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(26, hasShadowColor_);
      }
      if (shadowColorRed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, shadowColorRed_);
      }
      if (shadowColorBlue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, shadowColorBlue_);
      }
      if (shadowColorGreen_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, shadowColorGreen_);
      }
      if (shadowColorAlpha_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(30, shadowColorAlpha_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode)) {
        return super.equals(obj);
      }
      com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode other = (com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (getLayoutId()
          == other.getLayoutId());
      result = result && (getPaintId()
          == other.getPaintId());
      result = result && (
          java.lang.Double.doubleToLongBits(getMinx())
          == java.lang.Double.doubleToLongBits(
              other.getMinx()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMiny())
          == java.lang.Double.doubleToLongBits(
              other.getMiny()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMaxx())
          == java.lang.Double.doubleToLongBits(
              other.getMaxx()));
      result = result && (
          java.lang.Double.doubleToLongBits(getMaxy())
          == java.lang.Double.doubleToLongBits(
              other.getMaxy()));
      result = result && (getZIndex()
          == other.getZIndex());
      result = result && getChildOrderList()
          .equals(other.getChildOrderList());
      result = result && (
          java.lang.Double.doubleToLongBits(getTransparency())
          == java.lang.Double.doubleToLongBits(
              other.getTransparency()));
      result = result && (getHasBackgroundColor()
          == other.getHasBackgroundColor());
      result = result && (getBackgroundColorRed()
          == other.getBackgroundColorRed());
      result = result && (getBackgroundColorGreen()
          == other.getBackgroundColorGreen());
      result = result && (getBackgroundColorBlue()
          == other.getBackgroundColorBlue());
      result = result && (getBackgroundColorAlpha()
          == other.getBackgroundColorAlpha());
      result = result && (getHasBorderColor()
          == other.getHasBorderColor());
      result = result && (getBorderColorRed()
          == other.getBorderColorRed());
      result = result && (getBorderColorGreen()
          == other.getBorderColorGreen());
      result = result && (getBorderColorBlue()
          == other.getBorderColorBlue());
      result = result && (getBorderColorAlpha()
          == other.getBorderColorAlpha());
      result = result && (
          java.lang.Double.doubleToLongBits(getBorderWidth())
          == java.lang.Double.doubleToLongBits(
              other.getBorderWidth()));
      result = result && (
          java.lang.Double.doubleToLongBits(getCornerRadius())
          == java.lang.Double.doubleToLongBits(
              other.getCornerRadius()));
      result = result && (
          java.lang.Double.doubleToLongBits(getShadowRadius())
          == java.lang.Double.doubleToLongBits(
              other.getShadowRadius()));
      result = result && (
          java.lang.Double.doubleToLongBits(getShadowOffsetX())
          == java.lang.Double.doubleToLongBits(
              other.getShadowOffsetX()));
      result = result && (
          java.lang.Double.doubleToLongBits(getShadowOffsetY())
          == java.lang.Double.doubleToLongBits(
              other.getShadowOffsetY()));
      result = result && (getHasShadowColor()
          == other.getHasShadowColor());
      result = result && (getShadowColorRed()
          == other.getShadowColorRed());
      result = result && (getShadowColorBlue()
          == other.getShadowColorBlue());
      result = result && (getShadowColorGreen()
          == other.getShadowColorGreen());
      result = result && (getShadowColorAlpha()
          == other.getShadowColorAlpha());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + LAYOUTID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLayoutId());
      hash = (37 * hash) + PAINTID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPaintId());
      hash = (37 * hash) + MINX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMinx()));
      hash = (37 * hash) + MINY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMiny()));
      hash = (37 * hash) + MAXX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxx()));
      hash = (37 * hash) + MAXY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMaxy()));
      hash = (37 * hash) + ZINDEX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getZIndex());
      if (getChildOrderCount() > 0) {
        hash = (37 * hash) + CHILDORDER_FIELD_NUMBER;
        hash = (53 * hash) + getChildOrderList().hashCode();
      }
      hash = (37 * hash) + TRANSPARENCY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTransparency()));
      hash = (37 * hash) + HASBACKGROUNDCOLOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHasBackgroundColor());
      hash = (37 * hash) + BACKGROUNDCOLORRED_FIELD_NUMBER;
      hash = (53 * hash) + getBackgroundColorRed();
      hash = (37 * hash) + BACKGROUNDCOLORGREEN_FIELD_NUMBER;
      hash = (53 * hash) + getBackgroundColorGreen();
      hash = (37 * hash) + BACKGROUNDCOLORBLUE_FIELD_NUMBER;
      hash = (53 * hash) + getBackgroundColorBlue();
      hash = (37 * hash) + BACKGROUNDCOLORALPHA_FIELD_NUMBER;
      hash = (53 * hash) + getBackgroundColorAlpha();
      hash = (37 * hash) + HASBORDERCOLOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHasBorderColor());
      hash = (37 * hash) + BORDERCOLORRED_FIELD_NUMBER;
      hash = (53 * hash) + getBorderColorRed();
      hash = (37 * hash) + BORDERCOLORGREEN_FIELD_NUMBER;
      hash = (53 * hash) + getBorderColorGreen();
      hash = (37 * hash) + BORDERCOLORBLUE_FIELD_NUMBER;
      hash = (53 * hash) + getBorderColorBlue();
      hash = (37 * hash) + BORDERCOLORALPHA_FIELD_NUMBER;
      hash = (53 * hash) + getBorderColorAlpha();
      hash = (37 * hash) + BORDERWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBorderWidth()));
      hash = (37 * hash) + CORNERRADIUS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCornerRadius()));
      hash = (37 * hash) + SHADOWRADIUS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getShadowRadius()));
      hash = (37 * hash) + SHADOWOFFSETX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getShadowOffsetX()));
      hash = (37 * hash) + SHADOWOFFSETY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getShadowOffsetY()));
      hash = (37 * hash) + HASSHADOWCOLOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getHasShadowColor());
      hash = (37 * hash) + SHADOWCOLORRED_FIELD_NUMBER;
      hash = (53 * hash) + getShadowColorRed();
      hash = (37 * hash) + SHADOWCOLORBLUE_FIELD_NUMBER;
      hash = (53 * hash) + getShadowColorBlue();
      hash = (37 * hash) + SHADOWCOLORGREEN_FIELD_NUMBER;
      hash = (53 * hash) + getShadowColorGreen();
      hash = (37 * hash) + SHADOWCOLORALPHA_FIELD_NUMBER;
      hash = (53 * hash) + getShadowColorAlpha();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matcha.view.LayoutPaintNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:matcha.view.LayoutPaintNode)
        com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_LayoutPaintNode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_LayoutPaintNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode.class, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode.Builder.class);
      }

      // Construct using com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0L;

        layoutId_ = 0L;

        paintId_ = 0L;

        minx_ = 0D;

        miny_ = 0D;

        maxx_ = 0D;

        maxy_ = 0D;

        zIndex_ = 0L;

        childOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        transparency_ = 0D;

        hasBackgroundColor_ = false;

        backgroundColorRed_ = 0;

        backgroundColorGreen_ = 0;

        backgroundColorBlue_ = 0;

        backgroundColorAlpha_ = 0;

        hasBorderColor_ = false;

        borderColorRed_ = 0;

        borderColorGreen_ = 0;

        borderColorBlue_ = 0;

        borderColorAlpha_ = 0;

        borderWidth_ = 0D;

        cornerRadius_ = 0D;

        shadowRadius_ = 0D;

        shadowOffsetX_ = 0D;

        shadowOffsetY_ = 0D;

        hasShadowColor_ = false;

        shadowColorRed_ = 0;

        shadowColorBlue_ = 0;

        shadowColorGreen_ = 0;

        shadowColorAlpha_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_LayoutPaintNode_descriptor;
      }

      @java.lang.Override
      public com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode getDefaultInstanceForType() {
        return com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode build() {
        com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode buildPartial() {
        com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode result = new com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.layoutId_ = layoutId_;
        result.paintId_ = paintId_;
        result.minx_ = minx_;
        result.miny_ = miny_;
        result.maxx_ = maxx_;
        result.maxy_ = maxy_;
        result.zIndex_ = zIndex_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          childOrder_ = java.util.Collections.unmodifiableList(childOrder_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.childOrder_ = childOrder_;
        result.transparency_ = transparency_;
        result.hasBackgroundColor_ = hasBackgroundColor_;
        result.backgroundColorRed_ = backgroundColorRed_;
        result.backgroundColorGreen_ = backgroundColorGreen_;
        result.backgroundColorBlue_ = backgroundColorBlue_;
        result.backgroundColorAlpha_ = backgroundColorAlpha_;
        result.hasBorderColor_ = hasBorderColor_;
        result.borderColorRed_ = borderColorRed_;
        result.borderColorGreen_ = borderColorGreen_;
        result.borderColorBlue_ = borderColorBlue_;
        result.borderColorAlpha_ = borderColorAlpha_;
        result.borderWidth_ = borderWidth_;
        result.cornerRadius_ = cornerRadius_;
        result.shadowRadius_ = shadowRadius_;
        result.shadowOffsetX_ = shadowOffsetX_;
        result.shadowOffsetY_ = shadowOffsetY_;
        result.hasShadowColor_ = hasShadowColor_;
        result.shadowColorRed_ = shadowColorRed_;
        result.shadowColorBlue_ = shadowColorBlue_;
        result.shadowColorGreen_ = shadowColorGreen_;
        result.shadowColorAlpha_ = shadowColorAlpha_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode) {
          return mergeFrom((com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode other) {
        if (other == com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (other.getLayoutId() != 0L) {
          setLayoutId(other.getLayoutId());
        }
        if (other.getPaintId() != 0L) {
          setPaintId(other.getPaintId());
        }
        if (other.getMinx() != 0D) {
          setMinx(other.getMinx());
        }
        if (other.getMiny() != 0D) {
          setMiny(other.getMiny());
        }
        if (other.getMaxx() != 0D) {
          setMaxx(other.getMaxx());
        }
        if (other.getMaxy() != 0D) {
          setMaxy(other.getMaxy());
        }
        if (other.getZIndex() != 0L) {
          setZIndex(other.getZIndex());
        }
        if (!other.childOrder_.isEmpty()) {
          if (childOrder_.isEmpty()) {
            childOrder_ = other.childOrder_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureChildOrderIsMutable();
            childOrder_.addAll(other.childOrder_);
          }
          onChanged();
        }
        if (other.getTransparency() != 0D) {
          setTransparency(other.getTransparency());
        }
        if (other.getHasBackgroundColor() != false) {
          setHasBackgroundColor(other.getHasBackgroundColor());
        }
        if (other.getBackgroundColorRed() != 0) {
          setBackgroundColorRed(other.getBackgroundColorRed());
        }
        if (other.getBackgroundColorGreen() != 0) {
          setBackgroundColorGreen(other.getBackgroundColorGreen());
        }
        if (other.getBackgroundColorBlue() != 0) {
          setBackgroundColorBlue(other.getBackgroundColorBlue());
        }
        if (other.getBackgroundColorAlpha() != 0) {
          setBackgroundColorAlpha(other.getBackgroundColorAlpha());
        }
        if (other.getHasBorderColor() != false) {
          setHasBorderColor(other.getHasBorderColor());
        }
        if (other.getBorderColorRed() != 0) {
          setBorderColorRed(other.getBorderColorRed());
        }
        if (other.getBorderColorGreen() != 0) {
          setBorderColorGreen(other.getBorderColorGreen());
        }
        if (other.getBorderColorBlue() != 0) {
          setBorderColorBlue(other.getBorderColorBlue());
        }
        if (other.getBorderColorAlpha() != 0) {
          setBorderColorAlpha(other.getBorderColorAlpha());
        }
        if (other.getBorderWidth() != 0D) {
          setBorderWidth(other.getBorderWidth());
        }
        if (other.getCornerRadius() != 0D) {
          setCornerRadius(other.getCornerRadius());
        }
        if (other.getShadowRadius() != 0D) {
          setShadowRadius(other.getShadowRadius());
        }
        if (other.getShadowOffsetX() != 0D) {
          setShadowOffsetX(other.getShadowOffsetX());
        }
        if (other.getShadowOffsetY() != 0D) {
          setShadowOffsetY(other.getShadowOffsetY());
        }
        if (other.getHasShadowColor() != false) {
          setHasShadowColor(other.getHasShadowColor());
        }
        if (other.getShadowColorRed() != 0) {
          setShadowColorRed(other.getShadowColorRed());
        }
        if (other.getShadowColorBlue() != 0) {
          setShadowColorBlue(other.getShadowColorBlue());
        }
        if (other.getShadowColorGreen() != 0) {
          setShadowColorGreen(other.getShadowColorGreen());
        }
        if (other.getShadowColorAlpha() != 0) {
          setShadowColorAlpha(other.getShadowColorAlpha());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>int64 id = 1;</code>
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private long layoutId_ ;
      /**
       * <code>int64 layoutId = 2;</code>
       */
      public long getLayoutId() {
        return layoutId_;
      }
      /**
       * <code>int64 layoutId = 2;</code>
       */
      public Builder setLayoutId(long value) {
        
        layoutId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 layoutId = 2;</code>
       */
      public Builder clearLayoutId() {
        
        layoutId_ = 0L;
        onChanged();
        return this;
      }

      private long paintId_ ;
      /**
       * <code>int64 paintId = 3;</code>
       */
      public long getPaintId() {
        return paintId_;
      }
      /**
       * <code>int64 paintId = 3;</code>
       */
      public Builder setPaintId(long value) {
        
        paintId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 paintId = 3;</code>
       */
      public Builder clearPaintId() {
        
        paintId_ = 0L;
        onChanged();
        return this;
      }

      private double minx_ ;
      /**
       * <pre>
       * Guide
       * </pre>
       *
       * <code>double minx = 4;</code>
       */
      public double getMinx() {
        return minx_;
      }
      /**
       * <pre>
       * Guide
       * </pre>
       *
       * <code>double minx = 4;</code>
       */
      public Builder setMinx(double value) {
        
        minx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Guide
       * </pre>
       *
       * <code>double minx = 4;</code>
       */
      public Builder clearMinx() {
        
        minx_ = 0D;
        onChanged();
        return this;
      }

      private double miny_ ;
      /**
       * <code>double miny = 5;</code>
       */
      public double getMiny() {
        return miny_;
      }
      /**
       * <code>double miny = 5;</code>
       */
      public Builder setMiny(double value) {
        
        miny_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double miny = 5;</code>
       */
      public Builder clearMiny() {
        
        miny_ = 0D;
        onChanged();
        return this;
      }

      private double maxx_ ;
      /**
       * <code>double maxx = 6;</code>
       */
      public double getMaxx() {
        return maxx_;
      }
      /**
       * <code>double maxx = 6;</code>
       */
      public Builder setMaxx(double value) {
        
        maxx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double maxx = 6;</code>
       */
      public Builder clearMaxx() {
        
        maxx_ = 0D;
        onChanged();
        return this;
      }

      private double maxy_ ;
      /**
       * <code>double maxy = 7;</code>
       */
      public double getMaxy() {
        return maxy_;
      }
      /**
       * <code>double maxy = 7;</code>
       */
      public Builder setMaxy(double value) {
        
        maxy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double maxy = 7;</code>
       */
      public Builder clearMaxy() {
        
        maxy_ = 0D;
        onChanged();
        return this;
      }

      private long zIndex_ ;
      /**
       * <code>int64 zIndex = 8;</code>
       */
      public long getZIndex() {
        return zIndex_;
      }
      /**
       * <code>int64 zIndex = 8;</code>
       */
      public Builder setZIndex(long value) {
        
        zIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 zIndex = 8;</code>
       */
      public Builder clearZIndex() {
        
        zIndex_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> childOrder_ = java.util.Collections.emptyList();
      private void ensureChildOrderIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          childOrder_ = new java.util.ArrayList<java.lang.Long>(childOrder_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int64 childOrder = 9;</code>
       */
      public java.util.List<java.lang.Long>
          getChildOrderList() {
        return java.util.Collections.unmodifiableList(childOrder_);
      }
      /**
       * <code>repeated int64 childOrder = 9;</code>
       */
      public int getChildOrderCount() {
        return childOrder_.size();
      }
      /**
       * <code>repeated int64 childOrder = 9;</code>
       */
      public long getChildOrder(int index) {
        return childOrder_.get(index);
      }
      /**
       * <code>repeated int64 childOrder = 9;</code>
       */
      public Builder setChildOrder(
          int index, long value) {
        ensureChildOrderIsMutable();
        childOrder_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 childOrder = 9;</code>
       */
      public Builder addChildOrder(long value) {
        ensureChildOrderIsMutable();
        childOrder_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 childOrder = 9;</code>
       */
      public Builder addAllChildOrder(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureChildOrderIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, childOrder_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 childOrder = 9;</code>
       */
      public Builder clearChildOrder() {
        childOrder_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private double transparency_ ;
      /**
       * <pre>
       * Paint
       * </pre>
       *
       * <code>double transparency = 10;</code>
       */
      public double getTransparency() {
        return transparency_;
      }
      /**
       * <pre>
       * Paint
       * </pre>
       *
       * <code>double transparency = 10;</code>
       */
      public Builder setTransparency(double value) {
        
        transparency_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Paint
       * </pre>
       *
       * <code>double transparency = 10;</code>
       */
      public Builder clearTransparency() {
        
        transparency_ = 0D;
        onChanged();
        return this;
      }

      private boolean hasBackgroundColor_ ;
      /**
       * <code>bool hasBackgroundColor = 11;</code>
       */
      public boolean getHasBackgroundColor() {
        return hasBackgroundColor_;
      }
      /**
       * <code>bool hasBackgroundColor = 11;</code>
       */
      public Builder setHasBackgroundColor(boolean value) {
        
        hasBackgroundColor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool hasBackgroundColor = 11;</code>
       */
      public Builder clearHasBackgroundColor() {
        
        hasBackgroundColor_ = false;
        onChanged();
        return this;
      }

      private int backgroundColorRed_ ;
      /**
       * <code>uint32 backgroundColorRed = 12;</code>
       */
      public int getBackgroundColorRed() {
        return backgroundColorRed_;
      }
      /**
       * <code>uint32 backgroundColorRed = 12;</code>
       */
      public Builder setBackgroundColorRed(int value) {
        
        backgroundColorRed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 backgroundColorRed = 12;</code>
       */
      public Builder clearBackgroundColorRed() {
        
        backgroundColorRed_ = 0;
        onChanged();
        return this;
      }

      private int backgroundColorGreen_ ;
      /**
       * <code>uint32 backgroundColorGreen = 13;</code>
       */
      public int getBackgroundColorGreen() {
        return backgroundColorGreen_;
      }
      /**
       * <code>uint32 backgroundColorGreen = 13;</code>
       */
      public Builder setBackgroundColorGreen(int value) {
        
        backgroundColorGreen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 backgroundColorGreen = 13;</code>
       */
      public Builder clearBackgroundColorGreen() {
        
        backgroundColorGreen_ = 0;
        onChanged();
        return this;
      }

      private int backgroundColorBlue_ ;
      /**
       * <code>uint32 backgroundColorBlue = 14;</code>
       */
      public int getBackgroundColorBlue() {
        return backgroundColorBlue_;
      }
      /**
       * <code>uint32 backgroundColorBlue = 14;</code>
       */
      public Builder setBackgroundColorBlue(int value) {
        
        backgroundColorBlue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 backgroundColorBlue = 14;</code>
       */
      public Builder clearBackgroundColorBlue() {
        
        backgroundColorBlue_ = 0;
        onChanged();
        return this;
      }

      private int backgroundColorAlpha_ ;
      /**
       * <code>uint32 backgroundColorAlpha = 15;</code>
       */
      public int getBackgroundColorAlpha() {
        return backgroundColorAlpha_;
      }
      /**
       * <code>uint32 backgroundColorAlpha = 15;</code>
       */
      public Builder setBackgroundColorAlpha(int value) {
        
        backgroundColorAlpha_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 backgroundColorAlpha = 15;</code>
       */
      public Builder clearBackgroundColorAlpha() {
        
        backgroundColorAlpha_ = 0;
        onChanged();
        return this;
      }

      private boolean hasBorderColor_ ;
      /**
       * <code>bool hasBorderColor = 16;</code>
       */
      public boolean getHasBorderColor() {
        return hasBorderColor_;
      }
      /**
       * <code>bool hasBorderColor = 16;</code>
       */
      public Builder setHasBorderColor(boolean value) {
        
        hasBorderColor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool hasBorderColor = 16;</code>
       */
      public Builder clearHasBorderColor() {
        
        hasBorderColor_ = false;
        onChanged();
        return this;
      }

      private int borderColorRed_ ;
      /**
       * <code>uint32 borderColorRed = 17;</code>
       */
      public int getBorderColorRed() {
        return borderColorRed_;
      }
      /**
       * <code>uint32 borderColorRed = 17;</code>
       */
      public Builder setBorderColorRed(int value) {
        
        borderColorRed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 borderColorRed = 17;</code>
       */
      public Builder clearBorderColorRed() {
        
        borderColorRed_ = 0;
        onChanged();
        return this;
      }

      private int borderColorGreen_ ;
      /**
       * <code>uint32 borderColorGreen = 18;</code>
       */
      public int getBorderColorGreen() {
        return borderColorGreen_;
      }
      /**
       * <code>uint32 borderColorGreen = 18;</code>
       */
      public Builder setBorderColorGreen(int value) {
        
        borderColorGreen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 borderColorGreen = 18;</code>
       */
      public Builder clearBorderColorGreen() {
        
        borderColorGreen_ = 0;
        onChanged();
        return this;
      }

      private int borderColorBlue_ ;
      /**
       * <code>uint32 borderColorBlue = 19;</code>
       */
      public int getBorderColorBlue() {
        return borderColorBlue_;
      }
      /**
       * <code>uint32 borderColorBlue = 19;</code>
       */
      public Builder setBorderColorBlue(int value) {
        
        borderColorBlue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 borderColorBlue = 19;</code>
       */
      public Builder clearBorderColorBlue() {
        
        borderColorBlue_ = 0;
        onChanged();
        return this;
      }

      private int borderColorAlpha_ ;
      /**
       * <code>uint32 borderColorAlpha = 20;</code>
       */
      public int getBorderColorAlpha() {
        return borderColorAlpha_;
      }
      /**
       * <code>uint32 borderColorAlpha = 20;</code>
       */
      public Builder setBorderColorAlpha(int value) {
        
        borderColorAlpha_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 borderColorAlpha = 20;</code>
       */
      public Builder clearBorderColorAlpha() {
        
        borderColorAlpha_ = 0;
        onChanged();
        return this;
      }

      private double borderWidth_ ;
      /**
       * <code>double borderWidth = 21;</code>
       */
      public double getBorderWidth() {
        return borderWidth_;
      }
      /**
       * <code>double borderWidth = 21;</code>
       */
      public Builder setBorderWidth(double value) {
        
        borderWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double borderWidth = 21;</code>
       */
      public Builder clearBorderWidth() {
        
        borderWidth_ = 0D;
        onChanged();
        return this;
      }

      private double cornerRadius_ ;
      /**
       * <code>double cornerRadius = 22;</code>
       */
      public double getCornerRadius() {
        return cornerRadius_;
      }
      /**
       * <code>double cornerRadius = 22;</code>
       */
      public Builder setCornerRadius(double value) {
        
        cornerRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double cornerRadius = 22;</code>
       */
      public Builder clearCornerRadius() {
        
        cornerRadius_ = 0D;
        onChanged();
        return this;
      }

      private double shadowRadius_ ;
      /**
       * <code>double shadowRadius = 23;</code>
       */
      public double getShadowRadius() {
        return shadowRadius_;
      }
      /**
       * <code>double shadowRadius = 23;</code>
       */
      public Builder setShadowRadius(double value) {
        
        shadowRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double shadowRadius = 23;</code>
       */
      public Builder clearShadowRadius() {
        
        shadowRadius_ = 0D;
        onChanged();
        return this;
      }

      private double shadowOffsetX_ ;
      /**
       * <code>double shadowOffsetX = 24;</code>
       */
      public double getShadowOffsetX() {
        return shadowOffsetX_;
      }
      /**
       * <code>double shadowOffsetX = 24;</code>
       */
      public Builder setShadowOffsetX(double value) {
        
        shadowOffsetX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double shadowOffsetX = 24;</code>
       */
      public Builder clearShadowOffsetX() {
        
        shadowOffsetX_ = 0D;
        onChanged();
        return this;
      }

      private double shadowOffsetY_ ;
      /**
       * <code>double shadowOffsetY = 25;</code>
       */
      public double getShadowOffsetY() {
        return shadowOffsetY_;
      }
      /**
       * <code>double shadowOffsetY = 25;</code>
       */
      public Builder setShadowOffsetY(double value) {
        
        shadowOffsetY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double shadowOffsetY = 25;</code>
       */
      public Builder clearShadowOffsetY() {
        
        shadowOffsetY_ = 0D;
        onChanged();
        return this;
      }

      private boolean hasShadowColor_ ;
      /**
       * <code>bool hasShadowColor = 26;</code>
       */
      public boolean getHasShadowColor() {
        return hasShadowColor_;
      }
      /**
       * <code>bool hasShadowColor = 26;</code>
       */
      public Builder setHasShadowColor(boolean value) {
        
        hasShadowColor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool hasShadowColor = 26;</code>
       */
      public Builder clearHasShadowColor() {
        
        hasShadowColor_ = false;
        onChanged();
        return this;
      }

      private int shadowColorRed_ ;
      /**
       * <code>uint32 shadowColorRed = 27;</code>
       */
      public int getShadowColorRed() {
        return shadowColorRed_;
      }
      /**
       * <code>uint32 shadowColorRed = 27;</code>
       */
      public Builder setShadowColorRed(int value) {
        
        shadowColorRed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 shadowColorRed = 27;</code>
       */
      public Builder clearShadowColorRed() {
        
        shadowColorRed_ = 0;
        onChanged();
        return this;
      }

      private int shadowColorBlue_ ;
      /**
       * <code>uint32 shadowColorBlue = 28;</code>
       */
      public int getShadowColorBlue() {
        return shadowColorBlue_;
      }
      /**
       * <code>uint32 shadowColorBlue = 28;</code>
       */
      public Builder setShadowColorBlue(int value) {
        
        shadowColorBlue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 shadowColorBlue = 28;</code>
       */
      public Builder clearShadowColorBlue() {
        
        shadowColorBlue_ = 0;
        onChanged();
        return this;
      }

      private int shadowColorGreen_ ;
      /**
       * <code>uint32 shadowColorGreen = 29;</code>
       */
      public int getShadowColorGreen() {
        return shadowColorGreen_;
      }
      /**
       * <code>uint32 shadowColorGreen = 29;</code>
       */
      public Builder setShadowColorGreen(int value) {
        
        shadowColorGreen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 shadowColorGreen = 29;</code>
       */
      public Builder clearShadowColorGreen() {
        
        shadowColorGreen_ = 0;
        onChanged();
        return this;
      }

      private int shadowColorAlpha_ ;
      /**
       * <code>uint32 shadowColorAlpha = 30;</code>
       */
      public int getShadowColorAlpha() {
        return shadowColorAlpha_;
      }
      /**
       * <code>uint32 shadowColorAlpha = 30;</code>
       */
      public Builder setShadowColorAlpha(int value) {
        
        shadowColorAlpha_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 shadowColorAlpha = 30;</code>
       */
      public Builder clearShadowColorAlpha() {
        
        shadowColorAlpha_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:matcha.view.LayoutPaintNode)
    }

    // @@protoc_insertion_point(class_scope:matcha.view.LayoutPaintNode)
    private static final com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode();
    }

    public static com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LayoutPaintNode>
        PARSER = new com.google.protobuf.AbstractParser<LayoutPaintNode>() {
      @java.lang.Override
      public LayoutPaintNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LayoutPaintNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LayoutPaintNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LayoutPaintNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RootOrBuilder extends
      // @@protoc_insertion_point(interface_extends:matcha.view.Root)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
     */
    int getLayoutPaintNodesCount();
    /**
     * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
     */
    boolean containsLayoutPaintNodes(
        long key);
    /**
     * Use {@link #getLayoutPaintNodesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode>
    getLayoutPaintNodes();
    /**
     * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
     */
    java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode>
    getLayoutPaintNodesMap();
    /**
     * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
     */

    com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode getLayoutPaintNodesOrDefault(
        long key,
        com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode defaultValue);
    /**
     * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
     */

    com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode getLayoutPaintNodesOrThrow(
        long key);

    /**
     * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
     */
    int getBuildNodesCount();
    /**
     * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
     */
    boolean containsBuildNodes(
        long key);
    /**
     * Use {@link #getBuildNodesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode>
    getBuildNodes();
    /**
     * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
     */
    java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode>
    getBuildNodesMap();
    /**
     * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
     */

    com.github.gomatcha.matcha.proto.view.PbView.BuildNode getBuildNodesOrDefault(
        long key,
        com.github.gomatcha.matcha.proto.view.PbView.BuildNode defaultValue);
    /**
     * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
     */

    com.github.gomatcha.matcha.proto.view.PbView.BuildNode getBuildNodesOrThrow(
        long key);

    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
     */
    int getMiddlewareCount();
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
     */
    boolean containsMiddleware(
        java.lang.String key);
    /**
     * Use {@link #getMiddlewareMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.Any>
    getMiddleware();
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.Any>
    getMiddlewareMap();
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
     */

    com.google.protobuf.Any getMiddlewareOrDefault(
        java.lang.String key,
        com.google.protobuf.Any defaultValue);
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
     */

    com.google.protobuf.Any getMiddlewareOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code matcha.view.Root}
   */
  public  static final class Root extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:matcha.view.Root)
      RootOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Root.newBuilder() to construct.
    private Root(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Root() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Root(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                layoutPaintNodes_ = com.google.protobuf.MapField.newMapField(
                    LayoutPaintNodesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode>
              layoutPaintNodes__ = input.readMessage(
                  LayoutPaintNodesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              layoutPaintNodes_.getMutableMap().put(
                  layoutPaintNodes__.getKey(), layoutPaintNodes__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                buildNodes_ = com.google.protobuf.MapField.newMapField(
                    BuildNodesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode>
              buildNodes__ = input.readMessage(
                  BuildNodesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              buildNodes_.getMutableMap().put(
                  buildNodes__.getKey(), buildNodes__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                middleware_ = com.google.protobuf.MapField.newMapField(
                    MiddlewareDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.Any>
              middleware__ = input.readMessage(
                  MiddlewareDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              middleware_.getMutableMap().put(
                  middleware__.getKey(), middleware__.getValue());
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_Root_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetLayoutPaintNodes();
        case 3:
          return internalGetBuildNodes();
        case 4:
          return internalGetMiddleware();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_Root_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.gomatcha.matcha.proto.view.PbView.Root.class, com.github.gomatcha.matcha.proto.view.PbView.Root.Builder.class);
    }

    public static final int LAYOUTPAINTNODES_FIELD_NUMBER = 2;
    private static final class LayoutPaintNodesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode>newDefaultInstance(
                  com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_Root_LayoutPaintNodesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode> layoutPaintNodes_;
    private com.google.protobuf.MapField<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode>
    internalGetLayoutPaintNodes() {
      if (layoutPaintNodes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LayoutPaintNodesDefaultEntryHolder.defaultEntry);
      }
      return layoutPaintNodes_;
    }

    public int getLayoutPaintNodesCount() {
      return internalGetLayoutPaintNodes().getMap().size();
    }
    /**
     * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
     */

    public boolean containsLayoutPaintNodes(
        long key) {
      
      return internalGetLayoutPaintNodes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLayoutPaintNodesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode> getLayoutPaintNodes() {
      return getLayoutPaintNodesMap();
    }
    /**
     * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
     */

    public java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode> getLayoutPaintNodesMap() {
      return internalGetLayoutPaintNodes().getMap();
    }
    /**
     * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
     */

    public com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode getLayoutPaintNodesOrDefault(
        long key,
        com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode defaultValue) {
      
      java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode> map =
          internalGetLayoutPaintNodes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
     */

    public com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode getLayoutPaintNodesOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode> map =
          internalGetLayoutPaintNodes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BUILDNODES_FIELD_NUMBER = 3;
    private static final class BuildNodesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode>newDefaultInstance(
                  com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_Root_BuildNodesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.github.gomatcha.matcha.proto.view.PbView.BuildNode.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode> buildNodes_;
    private com.google.protobuf.MapField<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode>
    internalGetBuildNodes() {
      if (buildNodes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BuildNodesDefaultEntryHolder.defaultEntry);
      }
      return buildNodes_;
    }

    public int getBuildNodesCount() {
      return internalGetBuildNodes().getMap().size();
    }
    /**
     * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
     */

    public boolean containsBuildNodes(
        long key) {
      
      return internalGetBuildNodes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBuildNodesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode> getBuildNodes() {
      return getBuildNodesMap();
    }
    /**
     * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
     */

    public java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode> getBuildNodesMap() {
      return internalGetBuildNodes().getMap();
    }
    /**
     * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
     */

    public com.github.gomatcha.matcha.proto.view.PbView.BuildNode getBuildNodesOrDefault(
        long key,
        com.github.gomatcha.matcha.proto.view.PbView.BuildNode defaultValue) {
      
      java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode> map =
          internalGetBuildNodes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
     */

    public com.github.gomatcha.matcha.proto.view.PbView.BuildNode getBuildNodesOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode> map =
          internalGetBuildNodes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MIDDLEWARE_FIELD_NUMBER = 4;
    private static final class MiddlewareDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.Any> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.Any>newDefaultInstance(
                  com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_Root_MiddlewareEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  com.google.protobuf.Any.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.Any> middleware_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.Any>
    internalGetMiddleware() {
      if (middleware_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MiddlewareDefaultEntryHolder.defaultEntry);
      }
      return middleware_;
    }

    public int getMiddlewareCount() {
      return internalGetMiddleware().getMap().size();
    }
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
     */

    public boolean containsMiddleware(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetMiddleware().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMiddlewareMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.Any> getMiddleware() {
      return getMiddlewareMap();
    }
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.Any> getMiddlewareMap() {
      return internalGetMiddleware().getMap();
    }
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
     */

    public com.google.protobuf.Any getMiddlewareOrDefault(
        java.lang.String key,
        com.google.protobuf.Any defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.Any> map =
          internalGetMiddleware().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
     */

    public com.google.protobuf.Any getMiddlewareOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.Any> map =
          internalGetMiddleware().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetLayoutPaintNodes(),
          LayoutPaintNodesDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetBuildNodes(),
          BuildNodesDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMiddleware(),
          MiddlewareDefaultEntryHolder.defaultEntry,
          4);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode> entry
           : internalGetLayoutPaintNodes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode>
        layoutPaintNodes__ = LayoutPaintNodesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, layoutPaintNodes__);
      }
      for (java.util.Map.Entry<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode> entry
           : internalGetBuildNodes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode>
        buildNodes__ = BuildNodesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, buildNodes__);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.Any> entry
           : internalGetMiddleware().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.Any>
        middleware__ = MiddlewareDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, middleware__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.gomatcha.matcha.proto.view.PbView.Root)) {
        return super.equals(obj);
      }
      com.github.gomatcha.matcha.proto.view.PbView.Root other = (com.github.gomatcha.matcha.proto.view.PbView.Root) obj;

      boolean result = true;
      result = result && internalGetLayoutPaintNodes().equals(
          other.internalGetLayoutPaintNodes());
      result = result && internalGetBuildNodes().equals(
          other.internalGetBuildNodes());
      result = result && internalGetMiddleware().equals(
          other.internalGetMiddleware());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetLayoutPaintNodes().getMap().isEmpty()) {
        hash = (37 * hash) + LAYOUTPAINTNODES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLayoutPaintNodes().hashCode();
      }
      if (!internalGetBuildNodes().getMap().isEmpty()) {
        hash = (37 * hash) + BUILDNODES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBuildNodes().hashCode();
      }
      if (!internalGetMiddleware().getMap().isEmpty()) {
        hash = (37 * hash) + MIDDLEWARE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMiddleware().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.gomatcha.matcha.proto.view.PbView.Root parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.Root parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.Root parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.Root parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.Root parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.Root parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.Root parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.Root parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.Root parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.Root parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.Root parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.gomatcha.matcha.proto.view.PbView.Root parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.gomatcha.matcha.proto.view.PbView.Root prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matcha.view.Root}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:matcha.view.Root)
        com.github.gomatcha.matcha.proto.view.PbView.RootOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_Root_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetLayoutPaintNodes();
          case 3:
            return internalGetBuildNodes();
          case 4:
            return internalGetMiddleware();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableLayoutPaintNodes();
          case 3:
            return internalGetMutableBuildNodes();
          case 4:
            return internalGetMutableMiddleware();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_Root_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.gomatcha.matcha.proto.view.PbView.Root.class, com.github.gomatcha.matcha.proto.view.PbView.Root.Builder.class);
      }

      // Construct using com.github.gomatcha.matcha.proto.view.PbView.Root.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableLayoutPaintNodes().clear();
        internalGetMutableBuildNodes().clear();
        internalGetMutableMiddleware().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.gomatcha.matcha.proto.view.PbView.internal_static_matcha_view_Root_descriptor;
      }

      @java.lang.Override
      public com.github.gomatcha.matcha.proto.view.PbView.Root getDefaultInstanceForType() {
        return com.github.gomatcha.matcha.proto.view.PbView.Root.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.gomatcha.matcha.proto.view.PbView.Root build() {
        com.github.gomatcha.matcha.proto.view.PbView.Root result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.gomatcha.matcha.proto.view.PbView.Root buildPartial() {
        com.github.gomatcha.matcha.proto.view.PbView.Root result = new com.github.gomatcha.matcha.proto.view.PbView.Root(this);
        int from_bitField0_ = bitField0_;
        result.layoutPaintNodes_ = internalGetLayoutPaintNodes();
        result.layoutPaintNodes_.makeImmutable();
        result.buildNodes_ = internalGetBuildNodes();
        result.buildNodes_.makeImmutable();
        result.middleware_ = internalGetMiddleware();
        result.middleware_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.gomatcha.matcha.proto.view.PbView.Root) {
          return mergeFrom((com.github.gomatcha.matcha.proto.view.PbView.Root)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.gomatcha.matcha.proto.view.PbView.Root other) {
        if (other == com.github.gomatcha.matcha.proto.view.PbView.Root.getDefaultInstance()) return this;
        internalGetMutableLayoutPaintNodes().mergeFrom(
            other.internalGetLayoutPaintNodes());
        internalGetMutableBuildNodes().mergeFrom(
            other.internalGetBuildNodes());
        internalGetMutableMiddleware().mergeFrom(
            other.internalGetMiddleware());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.gomatcha.matcha.proto.view.PbView.Root parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.gomatcha.matcha.proto.view.PbView.Root) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode> layoutPaintNodes_;
      private com.google.protobuf.MapField<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode>
      internalGetLayoutPaintNodes() {
        if (layoutPaintNodes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LayoutPaintNodesDefaultEntryHolder.defaultEntry);
        }
        return layoutPaintNodes_;
      }
      private com.google.protobuf.MapField<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode>
      internalGetMutableLayoutPaintNodes() {
        onChanged();;
        if (layoutPaintNodes_ == null) {
          layoutPaintNodes_ = com.google.protobuf.MapField.newMapField(
              LayoutPaintNodesDefaultEntryHolder.defaultEntry);
        }
        if (!layoutPaintNodes_.isMutable()) {
          layoutPaintNodes_ = layoutPaintNodes_.copy();
        }
        return layoutPaintNodes_;
      }

      public int getLayoutPaintNodesCount() {
        return internalGetLayoutPaintNodes().getMap().size();
      }
      /**
       * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
       */

      public boolean containsLayoutPaintNodes(
          long key) {
        
        return internalGetLayoutPaintNodes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLayoutPaintNodesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode> getLayoutPaintNodes() {
        return getLayoutPaintNodesMap();
      }
      /**
       * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
       */

      public java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode> getLayoutPaintNodesMap() {
        return internalGetLayoutPaintNodes().getMap();
      }
      /**
       * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
       */

      public com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode getLayoutPaintNodesOrDefault(
          long key,
          com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode defaultValue) {
        
        java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode> map =
            internalGetLayoutPaintNodes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
       */

      public com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode getLayoutPaintNodesOrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode> map =
            internalGetLayoutPaintNodes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLayoutPaintNodes() {
        internalGetMutableLayoutPaintNodes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
       */

      public Builder removeLayoutPaintNodes(
          long key) {
        
        internalGetMutableLayoutPaintNodes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode>
      getMutableLayoutPaintNodes() {
        return internalGetMutableLayoutPaintNodes().getMutableMap();
      }
      /**
       * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
       */
      public Builder putLayoutPaintNodes(
          long key,
          com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLayoutPaintNodes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int64, .matcha.view.LayoutPaintNode&gt; layoutPaintNodes = 2;</code>
       */

      public Builder putAllLayoutPaintNodes(
          java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.LayoutPaintNode> values) {
        internalGetMutableLayoutPaintNodes().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode> buildNodes_;
      private com.google.protobuf.MapField<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode>
      internalGetBuildNodes() {
        if (buildNodes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BuildNodesDefaultEntryHolder.defaultEntry);
        }
        return buildNodes_;
      }
      private com.google.protobuf.MapField<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode>
      internalGetMutableBuildNodes() {
        onChanged();;
        if (buildNodes_ == null) {
          buildNodes_ = com.google.protobuf.MapField.newMapField(
              BuildNodesDefaultEntryHolder.defaultEntry);
        }
        if (!buildNodes_.isMutable()) {
          buildNodes_ = buildNodes_.copy();
        }
        return buildNodes_;
      }

      public int getBuildNodesCount() {
        return internalGetBuildNodes().getMap().size();
      }
      /**
       * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
       */

      public boolean containsBuildNodes(
          long key) {
        
        return internalGetBuildNodes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBuildNodesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode> getBuildNodes() {
        return getBuildNodesMap();
      }
      /**
       * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
       */

      public java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode> getBuildNodesMap() {
        return internalGetBuildNodes().getMap();
      }
      /**
       * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
       */

      public com.github.gomatcha.matcha.proto.view.PbView.BuildNode getBuildNodesOrDefault(
          long key,
          com.github.gomatcha.matcha.proto.view.PbView.BuildNode defaultValue) {
        
        java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode> map =
            internalGetBuildNodes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
       */

      public com.github.gomatcha.matcha.proto.view.PbView.BuildNode getBuildNodesOrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode> map =
            internalGetBuildNodes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBuildNodes() {
        internalGetMutableBuildNodes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
       */

      public Builder removeBuildNodes(
          long key) {
        
        internalGetMutableBuildNodes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode>
      getMutableBuildNodes() {
        return internalGetMutableBuildNodes().getMutableMap();
      }
      /**
       * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
       */
      public Builder putBuildNodes(
          long key,
          com.github.gomatcha.matcha.proto.view.PbView.BuildNode value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBuildNodes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int64, .matcha.view.BuildNode&gt; buildNodes = 3;</code>
       */

      public Builder putAllBuildNodes(
          java.util.Map<java.lang.Long, com.github.gomatcha.matcha.proto.view.PbView.BuildNode> values) {
        internalGetMutableBuildNodes().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.Any> middleware_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.Any>
      internalGetMiddleware() {
        if (middleware_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MiddlewareDefaultEntryHolder.defaultEntry);
        }
        return middleware_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.Any>
      internalGetMutableMiddleware() {
        onChanged();;
        if (middleware_ == null) {
          middleware_ = com.google.protobuf.MapField.newMapField(
              MiddlewareDefaultEntryHolder.defaultEntry);
        }
        if (!middleware_.isMutable()) {
          middleware_ = middleware_.copy();
        }
        return middleware_;
      }

      public int getMiddlewareCount() {
        return internalGetMiddleware().getMap().size();
      }
      /**
       * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
       */

      public boolean containsMiddleware(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMiddleware().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMiddlewareMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.Any> getMiddleware() {
        return getMiddlewareMap();
      }
      /**
       * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
       */

      public java.util.Map<java.lang.String, com.google.protobuf.Any> getMiddlewareMap() {
        return internalGetMiddleware().getMap();
      }
      /**
       * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
       */

      public com.google.protobuf.Any getMiddlewareOrDefault(
          java.lang.String key,
          com.google.protobuf.Any defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.Any> map =
            internalGetMiddleware().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
       */

      public com.google.protobuf.Any getMiddlewareOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, com.google.protobuf.Any> map =
            internalGetMiddleware().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMiddleware() {
        internalGetMutableMiddleware().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
       */

      public Builder removeMiddleware(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMiddleware().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.Any>
      getMutableMiddleware() {
        return internalGetMutableMiddleware().getMutableMap();
      }
      /**
       * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
       */
      public Builder putMiddleware(
          java.lang.String key,
          com.google.protobuf.Any value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMiddleware().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .google.protobuf.Any&gt; middleware = 4;</code>
       */

      public Builder putAllMiddleware(
          java.util.Map<java.lang.String, com.google.protobuf.Any> values) {
        internalGetMutableMiddleware().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:matcha.view.Root)
    }

    // @@protoc_insertion_point(class_scope:matcha.view.Root)
    private static final com.github.gomatcha.matcha.proto.view.PbView.Root DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.gomatcha.matcha.proto.view.PbView.Root();
    }

    public static com.github.gomatcha.matcha.proto.view.PbView.Root getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Root>
        PARSER = new com.google.protobuf.AbstractParser<Root>() {
      @java.lang.Override
      public Root parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Root(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Root> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Root> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.gomatcha.matcha.proto.view.PbView.Root getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_matcha_view_BuildNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_matcha_view_BuildNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_matcha_view_BuildNode_ValuesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_matcha_view_BuildNode_ValuesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_matcha_view_LayoutPaintNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_matcha_view_LayoutPaintNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_matcha_view_Root_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_matcha_view_Root_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_matcha_view_Root_LayoutPaintNodesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_matcha_view_Root_LayoutPaintNodesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_matcha_view_Root_BuildNodesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_matcha_view_Root_BuildNodesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_matcha_view_Root_MiddlewareEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_matcha_view_Root_MiddlewareEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0github.com/gomatcha/matcha/proto/view/" +
      "view.proto\022\013matcha.view\032\031google/protobuf" +
      "/any.proto\"\306\001\n\tBuildNode\022\n\n\002id\030\001 \001(\003\022\017\n\007" +
      "buildId\030\002 \001(\003\022\022\n\nbridgeName\030\003 \001(\t\022\023\n\013bri" +
      "dgeValue\030\004 \001(\014\0222\n\006values\030\005 \003(\0132\".matcha." +
      "view.BuildNode.ValuesEntry\022\020\n\010children\030\006" +
      " \003(\003\032-\n\013ValuesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu" +
      "e\030\002 \001(\014:\0028\001\"\254\005\n\017LayoutPaintNode\022\n\n\002id\030\001 " +
      "\001(\003\022\020\n\010layoutId\030\002 \001(\003\022\017\n\007paintId\030\003 \001(\003\022\014" +
      "\n\004minx\030\004 \001(\001\022\014\n\004miny\030\005 \001(\001\022\014\n\004maxx\030\006 \001(\001" +
      "\022\014\n\004maxy\030\007 \001(\001\022\016\n\006zIndex\030\010 \001(\003\022\022\n\nchildO" +
      "rder\030\t \003(\003\022\024\n\014transparency\030\n \001(\001\022\032\n\022hasB" +
      "ackgroundColor\030\013 \001(\010\022\032\n\022backgroundColorR" +
      "ed\030\014 \001(\r\022\034\n\024backgroundColorGreen\030\r \001(\r\022\033" +
      "\n\023backgroundColorBlue\030\016 \001(\r\022\034\n\024backgroun" +
      "dColorAlpha\030\017 \001(\r\022\026\n\016hasBorderColor\030\020 \001(" +
      "\010\022\026\n\016borderColorRed\030\021 \001(\r\022\030\n\020borderColor" +
      "Green\030\022 \001(\r\022\027\n\017borderColorBlue\030\023 \001(\r\022\030\n\020" +
      "borderColorAlpha\030\024 \001(\r\022\023\n\013borderWidth\030\025 " +
      "\001(\001\022\024\n\014cornerRadius\030\026 \001(\001\022\024\n\014shadowRadiu" +
      "s\030\027 \001(\001\022\025\n\rshadowOffsetX\030\030 \001(\001\022\025\n\rshadow" +
      "OffsetY\030\031 \001(\001\022\026\n\016hasShadowColor\030\032 \001(\010\022\026\n" +
      "\016shadowColorRed\030\033 \001(\r\022\027\n\017shadowColorBlue" +
      "\030\034 \001(\r\022\030\n\020shadowColorGreen\030\035 \001(\r\022\030\n\020shad" +
      "owColorAlpha\030\036 \001(\r\"\242\003\n\004Root\022A\n\020layoutPai" +
      "ntNodes\030\002 \003(\0132\'.matcha.view.Root.LayoutP" +
      "aintNodesEntry\0225\n\nbuildNodes\030\003 \003(\0132!.mat" +
      "cha.view.Root.BuildNodesEntry\0225\n\nmiddlew" +
      "are\030\004 \003(\0132!.matcha.view.Root.MiddlewareE" +
      "ntry\032U\n\025LayoutPaintNodesEntry\022\013\n\003key\030\001 \001" +
      "(\003\022+\n\005value\030\002 \001(\0132\034.matcha.view.LayoutPa" +
      "intNode:\0028\001\032I\n\017BuildNodesEntry\022\013\n\003key\030\001 " +
      "\001(\003\022%\n\005value\030\002 \001(\0132\026.matcha.view.BuildNo" +
      "de:\0028\001\032G\n\017MiddlewareEntry\022\013\n\003key\030\001 \001(\t\022#" +
      "\n\005value\030\002 \001(\0132\024.google.protobuf.Any:\0028\001B" +
      "D\n%com.github.gomatcha.matcha.proto.view" +
      "B\006PbViewZ\004view\242\002\014MatchaViewPBb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
        }, assigner);
    internal_static_matcha_view_BuildNode_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_matcha_view_BuildNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_matcha_view_BuildNode_descriptor,
        new java.lang.String[] { "Id", "BuildId", "BridgeName", "BridgeValue", "Values", "Children", });
    internal_static_matcha_view_BuildNode_ValuesEntry_descriptor =
      internal_static_matcha_view_BuildNode_descriptor.getNestedTypes().get(0);
    internal_static_matcha_view_BuildNode_ValuesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_matcha_view_BuildNode_ValuesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_matcha_view_LayoutPaintNode_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_matcha_view_LayoutPaintNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_matcha_view_LayoutPaintNode_descriptor,
        new java.lang.String[] { "Id", "LayoutId", "PaintId", "Minx", "Miny", "Maxx", "Maxy", "ZIndex", "ChildOrder", "Transparency", "HasBackgroundColor", "BackgroundColorRed", "BackgroundColorGreen", "BackgroundColorBlue", "BackgroundColorAlpha", "HasBorderColor", "BorderColorRed", "BorderColorGreen", "BorderColorBlue", "BorderColorAlpha", "BorderWidth", "CornerRadius", "ShadowRadius", "ShadowOffsetX", "ShadowOffsetY", "HasShadowColor", "ShadowColorRed", "ShadowColorBlue", "ShadowColorGreen", "ShadowColorAlpha", });
    internal_static_matcha_view_Root_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_matcha_view_Root_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_matcha_view_Root_descriptor,
        new java.lang.String[] { "LayoutPaintNodes", "BuildNodes", "Middleware", });
    internal_static_matcha_view_Root_LayoutPaintNodesEntry_descriptor =
      internal_static_matcha_view_Root_descriptor.getNestedTypes().get(0);
    internal_static_matcha_view_Root_LayoutPaintNodesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_matcha_view_Root_LayoutPaintNodesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_matcha_view_Root_BuildNodesEntry_descriptor =
      internal_static_matcha_view_Root_descriptor.getNestedTypes().get(1);
    internal_static_matcha_view_Root_BuildNodesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_matcha_view_Root_BuildNodesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_matcha_view_Root_MiddlewareEntry_descriptor =
      internal_static_matcha_view_Root_descriptor.getNestedTypes().get(2);
    internal_static_matcha_view_Root_MiddlewareEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_matcha_view_Root_MiddlewareEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    com.google.protobuf.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
