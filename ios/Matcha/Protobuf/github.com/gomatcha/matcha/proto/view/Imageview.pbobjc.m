// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: github.com/gomatcha/matcha/proto/view/imageview.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "github.com/gomatcha/matcha/proto/view/Imageview.pbobjc.h"
#import "github.com/gomatcha/matcha/proto/Image.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - MatchaViewPBImageviewRoot

@implementation MatchaViewPBImageviewRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - MatchaViewPBImageviewRoot_FileDescriptor

static GPBFileDescriptor *MatchaViewPBImageviewRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"matcha.view"
                                                 objcPrefix:@"MatchaViewPB"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum MatchaViewPBImageResizeMode

GPBEnumDescriptor *MatchaViewPBImageResizeMode_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "Fit\000Fill\000Stretch\000Center\000";
    static const int32_t values[] = {
        MatchaViewPBImageResizeMode_Fit,
        MatchaViewPBImageResizeMode_Fill,
        MatchaViewPBImageResizeMode_Stretch,
        MatchaViewPBImageResizeMode_Center,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(MatchaViewPBImageResizeMode)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:MatchaViewPBImageResizeMode_IsValidValue];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL MatchaViewPBImageResizeMode_IsValidValue(int32_t value__) {
  switch (value__) {
    case MatchaViewPBImageResizeMode_Fit:
    case MatchaViewPBImageResizeMode_Fill:
    case MatchaViewPBImageResizeMode_Stretch:
    case MatchaViewPBImageResizeMode_Center:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - MatchaViewPBImageView

@implementation MatchaViewPBImageView

@dynamic hasImage, image;
@dynamic resizeMode;
@dynamic hasTint, tint;
@dynamic scale;

typedef struct MatchaViewPBImageView__storage_ {
  uint32_t _has_storage_[1];
  MatchaViewPBImageResizeMode resizeMode;
  MatchaPBImageOrResource *image;
  MatchaPBColor *tint;
  double scale;
} MatchaViewPBImageView__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "image",
        .dataTypeSpecific.className = GPBStringifySymbol(MatchaPBImageOrResource),
        .number = MatchaViewPBImageView_FieldNumber_Image,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MatchaViewPBImageView__storage_, image),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "resizeMode",
        .dataTypeSpecific.enumDescFunc = MatchaViewPBImageResizeMode_EnumDescriptor,
        .number = MatchaViewPBImageView_FieldNumber_ResizeMode,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MatchaViewPBImageView__storage_, resizeMode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "tint",
        .dataTypeSpecific.className = GPBStringifySymbol(MatchaPBColor),
        .number = MatchaViewPBImageView_FieldNumber_Tint,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(MatchaViewPBImageView__storage_, tint),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "scale",
        .dataTypeSpecific.className = NULL,
        .number = MatchaViewPBImageView_FieldNumber_Scale,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(MatchaViewPBImageView__storage_, scale),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MatchaViewPBImageView class]
                                     rootClass:[MatchaViewPBImageviewRoot class]
                                          file:MatchaViewPBImageviewRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MatchaViewPBImageView__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\001\002\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t MatchaViewPBImageView_ResizeMode_RawValue(MatchaViewPBImageView *message) {
  GPBDescriptor *descriptor = [MatchaViewPBImageView descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:MatchaViewPBImageView_FieldNumber_ResizeMode];
  return GPBGetMessageInt32Field(message, field);
}

void SetMatchaViewPBImageView_ResizeMode_RawValue(MatchaViewPBImageView *message, int32_t value) {
  GPBDescriptor *descriptor = [MatchaViewPBImageView descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:MatchaViewPBImageView_FieldNumber_ResizeMode];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
